/*     */ package net.spartanb312.base.module.modules.client;@Parallel
/*     */ @ModuleInfo(name = "ClickGUI", category = Category.CLIENT, keyCode = 54, description = "place to click stuff")
/*     */ public class ClickGUI extends Module { public static ClickGUI instance; public int flag; Setting<Page> page; public Setting<Boolean> arrowScroll; public Setting<Integer> scrollSpeed; public Setting<Boolean> guiMove; public Setting<Float> guiMoveSpeed; public Setting<Float> moduleOpenSpeed; public Setting<Float> panelOpenSpeed; public Setting<Color> globalColor; public Setting<Boolean> rectHorns; public Setting<Float> rectHornsGap; public Setting<Integer> rectHornsX; public Setting<Integer> rectHornsY; public Setting<Integer> rectHornsScale; public Setting<Color> rectHornsColor; public Setting<Boolean> rectHornsShadow; public Setting<Float> rectHornsShadowXOffsetRight; public Setting<Float> rectHornsShadowXOffsetLeft; public Setting<Float> rectHornsSHadowsYOffset; public Setting<Float> rectHornsShadowSize; public Setting<Integer> rectHornsShadowAlpha; public Setting<Boolean> rectHornsHoverDifColor; public Setting<Boolean> rectHornsHoverColorSmooth; public Setting<Float> rectHornsHoverColorSmoothFactorIn; public Setting<Float> rectHornsHoverColorSmoothFactorOut; public Setting<Color> rectHornsHoverColor; public Setting<Float> rectWidth; public Setting<Float> rectHeight; public Setting<Float> rectX; public Setting<Float> rectY; public Setting<Boolean> guiRoundRect; public Setting<Boolean> arcTopRight; public Setting<Boolean> arcTopLeft; public Setting<Boolean> arcDownRight; public Setting<Boolean> arcDownLeft; public Setting<Float> radius; public Setting<Boolean> categoryRectOutline; public Setting<Float> categoryRectOutlineWidth; public Setting<Boolean> categoryRectOutlineBottomLineToggle; public Setting<Color> categoryRectOutlineColor; public Setting<Color> categoryRectColor; public Setting<Boolean> categoryGlow; public Setting<Float> categoryGlowWidth; public Setting<Float> categoryGlowHeight; public Setting<Color> categoryGlowColor; public Setting<Boolean> categoryRectHoverEffect; public Setting<CategoryRectHoverParticlesMode> categoryRectHoverParticlesMode; public Setting<Float> categoryRectHoverParticlesStartXOffset; public Setting<Float> categoryRectHoverParticlesEndXOffset; public Setting<CategoryRectHoverParticlesScaleFadeMode> categoryRectHoverParticlesScaleFadeMode; public Setting<Boolean> categoryRectHoverParticlesTrianglesSpin; public Setting<Boolean> categoryRectHoverParticlesRandomTriangleSpinSpeed; public Setting<Float> categoryRectHoverParticlesRandomTriangleSpinSpeedMax; public Setting<Float> categoryRectHoverParticlesRandomTriangleSpinSpeedMin; public Setting<Float> categoryRectHoverParticlesTrianglesSpinSpeed; public Setting<Boolean> categoryRectHoverParticlesTriangleRandomAngle; public Setting<Float> categoryRectHoverParticlesTrianglesAngle; public Setting<Float> categoryRectHoverParticlesGenerateRate; public Setting<Boolean> categoryRectHoverParticlesRiseSpeedRandom; public Setting<Float> categoryRectHoverParticlesRiseSpeed; public Setting<Float> categoryRectHoverParticlesRiseSpeedRandomMax; public Setting<Float> categoryRectHoverParticlesRiseSpeedRandomMin; public Setting<Boolean> categoryRectHoverParticlesRandomSize; public Setting<Float> categoryRectHoverParticlesRandomSizeMax; public Setting<Float> categoryRectHoverParticlesRandomSizeMin; public Setting<Float> categoryRectHoverParticlesSize; public Setting<Float> categoryRectHoverParticlesHeightCap; public Setting<Float> categoryRectHoverParticlesAlphaFadeFactor; public Setting<Float> categoryRectHoverParticlesScaleFadeFactor; public Setting<Color> categoryRectHoverParticlesColor; public Setting<Boolean> categoryRectHoverDifColor; public Setting<Boolean> categoryRectHoverColorSmooth; public Setting<Float> categoryRectHoverColorSmoothFactorIn; public Setting<Float> categoryRectHoverColorSmoothFactorOut; public Setting<Color> categoryRectHoverColor; public Setting<Boolean> categoryRectHoverTextScale; public Setting<Float> categoryRectHoverTextScaleNewScale; public Setting<Float> categoryRectHoverTextScaleFactorIn; public Setting<Float> categoryRectHoverTextScaleFactorOut; public Setting<Boolean> categoryRectHoverShadowGradientAlpha; public Setting<Boolean> categoryRectHoverShadowGradientAlphaSmooth; public Setting<Integer> categoryRectHoverShadowGradientNewAlpha; public Setting<Float> categoryRectHoverShadowGradientFactorIn; public Setting<Float> categoryRectHoverShadowGradientFactorOut; public Setting<Boolean> categoryIcons; public Setting<CategoryIconsSides> categoryIconsSide; public Setting<Float> categoryIconsX; public Setting<Float> categoryIconsY; public Setting<Float> categoryIconsScale; public Setting<Color> categoryIconsColor; public Setting<Boolean> categoryIconsBG; public Setting<Float> categoryIconsBGScaleOutside; public Setting<Float> categoryIconsBGSideX; public Setting<Boolean> categoryIconsBGSideFade; public Setting<Float> categoryIconsBGSideFadeSize; public Setting<Color> categoryIconsBGColor; public Setting<Boolean> categoryIconsGlow; public Setting<Float> categoryIconsGlowSize; public Setting<Color> categoryIconsGlowColor; public Setting<Boolean> categoryBar; public Setting<Float> categoryBarX; public Setting<Float> categoryBarY; public Setting<Float> categoryBarXScale; public Setting<Float> categoryBarYScale; public Setting<Color> barColor; public Setting<Boolean> categoryGradient; public Setting<Float> categoryGradientX; public Setting<Float> categoryGradientY; public Setting<Float> categoryGradientXScale; public Setting<Float> categoryGradientYScale; public Setting<Color> gradientBarColor; public Setting<Boolean> bottomGradient; public Setting<Float> bottomGradientWidth; public Setting<Color> panelBottomGradientColor; public Setting<Boolean> guiCategoryShadow; public Setting<Float> shadowRadiusCategory; public Setting<Integer> shadowAlpha; public Setting<Float> shadowSizeFactorX; public Setting<Float> shadowSizeFactorY; public Setting<Boolean> guiModuleShadow; public Setting<Boolean> guiModuleShadowFilled; public Setting<Integer> shadowAlphaModules; public Setting<Float> moduleShadowSizeFactor; public Setting<Boolean> moduleRectRounded; public Setting<Float> moduleRectRoundedRadius; public Setting<Boolean> moduleRoundedTopRight; public Setting<Boolean> moduleRoundedTopLeft; public Setting<Boolean> moduleRoundedBottomRight; public Setting<Boolean> moduleRoundedBottomLeft; public Setting<Boolean> moduleRectOutline; public Setting<Float> moduleRectOutlineLineWidth; public Setting<Color> moduleRectOutlineColor; public Setting<Boolean> moduleImageDescrip; public Setting<Boolean> moduleImageDescripGlow; public Setting<Float> moduleImageDescripGlowRadius; public Setting<Integer> moduleImageDescripGlowAlpha; public Setting<Color> moduleImageDescripColor; public Setting<Boolean> moduleImageDescripDisableOnModuleEnable; public Setting<ModuleMiniIconSide> moduleMiniIconSide; public Setting<Integer> moduleMiniIconXOffset; public Setting<Boolean> moduleTextExtendedMove; public Setting<Boolean> moduleNameHardMoveRightSide; public Setting<Boolean> moduleNameHardMoveLeftSide; public Setting<Integer> moduleGap; public Setting<Boolean> moduleHoverStuff; public Setting<Integer> moduleHoverFadeFactor; public Setting<Integer> moduleHoverStartAlpha; public Setting<HoverScaleFadeMode> moduleHoverScaleFade; public Setting<Float> moduleHoverScaleFadeFactor; public Setting<Boolean> moduleHoverTextScale; public Setting<Float> moduleHoverTextScaleNewScale; public Setting<Float> moduleHoverTextScaleFactorIn; public Setting<Float> moduleHoverTextScaleFactorOut; public Setting<PanelExtensions> panelExtensions; public Setting<Integer> panelExtensionsHeight; public Setting<Boolean> moduleSeparators; public Setting<Boolean> moduleSeparatorsOnTop; public Setting<Integer> moduleSeparatorX; public Setting<Integer> moduleSeparatorY; public Setting<Integer> moduleSeparatorWidth; public Setting<Integer> moduleSeparatorHeight; public Setting<Boolean> moduleSeparatorGlow; public Setting<Float> moduleSeparatorGlowHeight; public Setting<Integer> moduleSeparatorGlowAlpha; public Setting<ModuleSeparatorFadeMode> moduleSeparatorFadeMode; public Setting<Float> moduleSeparatorFadeLength; public Setting<Color> moduleSeparatorColor; public Setting<ModuleSideGlow> moduleSideGlow; public Setting<Boolean> moduleSideGlowLayer; public Setting<ModuleSideGlowDouble> moduleSideGlowDouble; public Setting<Float> moduleSideGlowDoubleWidth; public Setting<Integer> moduleSideGlowDoubleAlpha; public Setting<Float> moduleSideGlowWidth; public Setting<Color> moduleSideGlowColor; public Setting<Color> moduleColor; public Setting<Color> moduleBGColor; public Setting<Boolean> enabledRect; public Setting<EnabledRectAnimation> enabledRectAnimation; public Setting<EnabledRectMoveMode> enabledRectMove; public Setting<Float> enabledRectAnimationFactor; public Setting<Boolean> enabledRectBrightnessRoll; public Setting<EnabledRectBrightRollAxis> enabledRectBrightRollAxis; public Setting<EnabledRectBrightRollDirectionX> enabledRectBrightRollDirectionX; public Setting<EnabledRectBrightRollDirectionY> enabledRectBrightRollDirectionY; public Setting<Float> enabledRectBrightRollSpeed; public Setting<Float> enabledRectBrightRollMax; public Setting<Float> enabledRectBrightRollMin; public Setting<Float> enabledRectBrightRollLength; public Setting<Color> enabledRectColor; public Setting<Boolean> enabledSide; public Setting<EnabledSideSide> enabledSideSide; public Setting<Float> enabledSideHeight; public Setting<Float> enabledSideX; public Setting<Float> enabledSideY; public Setting<Float> enabledSideSize; public Setting<Boolean> enabledSideRound; public Setting<Boolean> enabledSideRoundedFull; public Setting<Float> enabledSideRadius; public Setting<Boolean> enabledSideMove; public Setting<Boolean> enabledSideMoveX; public Setting<Float> enabledSideMoveFactor; public Setting<Boolean> enabledSideColorMode; public Setting<Boolean> enabledSideColorModeAnimation; public Setting<Float> enabledSideColorModeAnimationFactor; public Setting<Color> enabledSideColor; public Setting<Color> disabledSideColorModeColor; public Setting<Boolean> enabledRectScaleFade; public Setting<EnableDisableScaleRect> enabledRectScaleOnWhat; public Setting<Float> enabledRectScaleX; public Setting<Float> enabledRectScaleY; public Setting<Float> enabledRectScaleFactor; public Setting<Integer> enabledRectStartAlpha; public Setting<Boolean> moduleTextNoMove; public Setting<Float> enabledSideIconXOffset; public Setting<Boolean> enabledSideIconDifColor; public Setting<Boolean> enabledSideIconColorSmooth; public Setting<Float> enabledSideIconColorSmoothFactor; public Setting<Color> enabledSideIconColor; public Setting<Boolean> enabledTextDifColor; public Setting<Boolean> enabledTextSmooth; public Setting<Float> enabledTextSmoothFactor; public Setting<Boolean> enabledTextBrightnessRoll; public Setting<EnabledTextBrightRollAxis> enabledTextBrightRollAxis; public Setting<EnabledTextBrightRollDirectionX> enabledTextBrightRollDirectionX; public Setting<EnabledTextBrightRollDirectionY> enabledTextBrightRollDirectionY; public Setting<Float> enabledTextBrightRollSpeed; public Setting<Float> enabledTextBrightRollMax; public Setting<Float> enabledTextBrightRollMin; public Setting<Float> enabledTextBrightRollLength; public Setting<Color> enabledTextColor; public Setting<Boolean> enabledGlow; public Setting<Float> enabledGlowRadius; public Setting<Integer> enabledGlowX; public Setting<Integer> enabledGlowY; public Setting<Integer> enabledGlowXScale; public Setting<Integer> enabledGlowYScale; public Setting<Boolean> enabledGlowMoveSideXOffset; public Setting<Color> enabledGlowColor; public Setting<Boolean> enabledTextGlow; public Setting<Integer> enabledTextGlowX; public Setting<Integer> enabledTextGlowY; public Setting<Float> enabledGlowTextRadius; public Setting<Color> enabledTextGlowColor; public Setting<Boolean> enabledSideGlow; public Setting<Boolean> enabledGlowSideTop; public Setting<Float> enabledGlowSideTopFactor; public Setting<Boolean> enabledGlowSideBottom; public Setting<Float> enabledGlowSideBottomFactor; public Setting<Boolean> enabledGlowSideRight; public Setting<Float> enabledGlowSideRightFactor; public Setting<Boolean> enabledGlowSideLeft; public Setting<Float> enabledGlowSideLeftFactor; public Setting<Color> enabledSideGlowColor; public Setting<Boolean> enabledAllGlowFade; public Setting<Float> enabledAllGlowAlphaFactor; public Setting<Boolean> enabledMiniIconDifColor; public Setting<Color> enabledMiniIconColor; public Setting<Integer> enabledMiniIconGlowAlpha; public Setting<Boolean> enabledMiniIconColorSmooth; public Setting<Color> enabledColor; public Setting<Float> moduleExtendedIconScale; public Setting<SideIconMode> sideIconMode; public Setting<SideIconSide> sideIconSide; public Setting<Integer> sideIconXOffset; public Setting<Boolean> sideIconNoMove; public Setting<Boolean> sideIconNoSideRectDraw; public Setting<Color> sideIconColor; public Setting<Float> extendedWidth; public Setting<Color> extendedColor; public Setting<Integer> extendedRectGap; public Setting<Color> extendedRectColor; public Setting<Boolean> extendedVerticalGradient; public Setting<Float> extendedGradientWidth;
/*     */   public Setting<Color> extendedGradientColor;
/*     */   public Setting<Boolean> extendedBottomExtensions;
/*     */   public Setting<Float> extendedBottomExtensionsHeight;
/*     */   public Setting<Boolean> extendedTopBars;
/*     */   public Setting<Boolean> extendedCategoryBar;
/*     */   public Setting<Float> extendedCategoryBarX;
/*     */   public Setting<Float> extendedCategoryBarY;
/*     */   public Setting<Float> extendedCategoryBarXScale;
/*     */   public Setting<Float> extendedCategoryBarYScale;
/*     */   public Setting<Color> extendedBarColor;
/*     */   public Setting<Boolean> extendedCategoryGradient;
/*     */   public Setting<Float> extendedCategoryGradientHeight;
/*     */   public Setting<Boolean> extendedGradientBottom;
/*     */   public Setting<Float> extendedGradientBottomHeight;
/*     */   public Setting<Color> extendedTopDownGradientColor;
/*     */   public Setting<Boolean> guiCategoryBase;
/*     */   public Setting<Boolean> panelBaseShadow;
/*     */   public Setting<Boolean> panelBaseShadowFilled;
/*     */   public Setting<Integer> panelBaseShadowAlpha;
/*     */   public Setting<Float> panelBaseShadowHeight;
/*     */   public Setting<Float> panelBaseShadowWidth;
/*     */   
/*     */   public ClickGUI() {
/*  27 */     this.flag = 0;
/*     */     
/*  29 */     this.page = setting("Page", Page.General);
/*     */ 
/*     */ 
/*     */     
/*  33 */     this.arrowScroll = setting("ArrowScroll", true).des("Use arrows to scroll in addition to using mouse wheel").whenAtMode(this.page, Page.General);
/*  34 */     this.scrollSpeed = setting("GUIScrollSpeed", 13, 1, 20).des("GUI Scroll Speed").whenAtMode(this.page, Page.General);
/*  35 */     this.guiMove = setting("GUIAnimation", true).des("GUI Toggle Animation").whenAtMode(this.page, Page.General);
/*  36 */     this.guiMoveSpeed = setting("GUIAnimateSpeed", 1.0F, 0.1F, 2.0F).whenTrue(this.guiMove).des("GUI Animation Speed Factor").whenAtMode(this.page, Page.General);
/*  37 */     this.moduleOpenSpeed = setting("ModuleSpeed", 1.0F, 0.1F, 2.0F).des("Module Opening Speed Factor").whenAtMode(this.page, Page.General);
/*  38 */     this.panelOpenSpeed = setting("PanelSpeed", 0.7F, 0.1F, 2.0F).des("Panel Opening Speed Factor").whenAtMode(this.page, Page.General);
/*     */     
/*  40 */     this.globalColor = setting("GlobalColor", new Color((new Color(100, 61, 255, 200)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 61, 255, 200)).des("Global Colors").whenAtMode(this.page, Page.General);
/*     */     
/*  42 */     this.rectHorns = setting("RectHorns", true).des("Category Rect Draw Horns").whenAtMode(this.page, Page.CategoryBars);
/*  43 */     this.rectHornsGap = setting("RectHornsGap", 1.0F, 0.0F, 2.0F).des("Category Rect Space Between Horns").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  44 */     this.rectHornsX = setting("RectHornsX", 10, -30, 30).des("Category Rect Horns X").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  45 */     this.rectHornsY = setting("RectHornsY", 11, -30, 30).des("Category Rect Horns Y").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  46 */     this.rectHornsScale = setting("RectHornsScale", 19, 0, 50).des("Category Rect Horns Scale").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  47 */     this.rectHornsColor = setting("RectHornsColor", new Color((new Color(69, 0, 178, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 69, 0, 178, 255)).des("Category Rect Horn Color").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  48 */     this.rectHornsShadow = setting("RectHornsShadows", true).des("Category Rect Shadows").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  49 */     this.rectHornsShadowXOffsetRight = setting("RHShadowsXOffsetRight", 0.7F, -20.0F, 20.0F).des("Category Rect Horns Right Shadows X Offset").whenTrue(this.rectHornsShadow).whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  50 */     this.rectHornsShadowXOffsetLeft = setting("RHShadowsXOffsetLeft", 0.0F, -20.0F, 20.0F).des("Category Rect Horns Left Shadows X Offset").whenTrue(this.rectHornsShadow).whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  51 */     this.rectHornsSHadowsYOffset = setting("RHornsShadowYOffset", -3.0F, -20.0F, 20.0F).des("Category Rect Horns Shadows Y Offset").whenTrue(this.rectHornsShadow).whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  52 */     this.rectHornsShadowSize = setting("RHornsShadowsSize", 4.8F, 0.0F, 10.0F).des("Category Rect Shadows Size").whenTrue(this.rectHornsShadow).whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  53 */     this.rectHornsShadowAlpha = setting("RHornsShadowsAlpha", 132, 0, 255).des("Category Rect Shadows Alpha").whenTrue(this.rectHornsShadow).whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  54 */     this.rectHornsHoverDifColor = setting("RectHornsHoverDifColor", true).des("Category Rect Horns Hover Color Change").whenTrue(this.rectHorns).whenAtMode(this.page, Page.CategoryBars);
/*  55 */     this.rectHornsHoverColorSmooth = setting("RHHoverColorSmooth", true).des("Category Rect Horns Hover Color Change Animation").whenTrue(this.rectHorns).whenTrue(this.rectHornsHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/*  56 */     this.rectHornsHoverColorSmoothFactorIn = setting("RHHoverColorSmoothIn", 3.6F, 0.4F, 10.0F).des("Category Rect Horns Hover Color Change Animation Speed In").whenTrue(this.rectHorns).whenTrue(this.rectHornsHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/*  57 */     this.rectHornsHoverColorSmoothFactorOut = setting("RHHoverColorSmoothOut", 1.1F, 0.4F, 10.0F).des("Category Rect Horns Hover Color Change Animation Speed Out").whenTrue(this.rectHorns).whenTrue(this.rectHornsHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/*  58 */     this.rectHornsHoverColor = setting("RectHornsHoverColor", new Color((new Color(122, 64, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 122, 64, 255, 255)).des("Category Rect Horns Hover Color").whenTrue(this.rectHorns).whenTrue(this.rectHornsHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/*     */     
/*  60 */     this.rectWidth = setting("RectWidth", -2.6F, -10.0F, 10.0F).des("Category Rect Width").whenAtMode(this.page, Page.CategoryBars);
/*  61 */     this.rectHeight = setting("RectHeight", 7.1F, -10.0F, 10.0F).des("Category Rect Height").whenAtMode(this.page, Page.CategoryBars);
/*  62 */     this.rectX = setting("RectX", -2.0F, -30.0F, 30.0F).des("Category Rect X").whenAtMode(this.page, Page.CategoryBars);
/*  63 */     this.rectY = setting("RectY", -3.9F, -30.0F, 30.0F).des("Category Rect Y").whenAtMode(this.page, Page.CategoryBars);
/*  64 */     this.guiRoundRect = setting("GUIRoundedRects", true).des("Draw Category Rectangles As Rounded Rectangles").whenAtMode(this.page, Page.CategoryBars);
/*  65 */     this.arcTopRight = setting("TopRightRounded", true).des("Round Top Right Corner").whenTrue(this.guiRoundRect).whenAtMode(this.page, Page.CategoryBars);
/*  66 */     this.arcTopLeft = setting("TopLeftRounded", false).des("Round Top Left Corner").whenTrue(this.guiRoundRect).whenAtMode(this.page, Page.CategoryBars);
/*  67 */     this.arcDownRight = setting("DownRightRounded", false).des("Round Bottom Right Corner").whenTrue(this.guiRoundRect).whenAtMode(this.page, Page.CategoryBars);
/*  68 */     this.arcDownLeft = setting("DownLeftRounded", true).des("Round Bottom Left Corner").whenTrue(this.guiRoundRect).whenAtMode(this.page, Page.CategoryBars);
/*  69 */     this.radius = setting("CornerRadius", 1.0F, 0.0F, 1.0F).des("Radius Of Rounded Category Rect Corners").whenTrue(this.guiRoundRect).whenAtMode(this.page, Page.CategoryBars);
/*  70 */     this.categoryRectOutline = setting("RectOutline", false).des("Category Rect Outline").whenAtMode(this.page, Page.CategoryBars);
/*  71 */     this.categoryRectOutlineWidth = setting("RectOutlineWidth", 1.0F, 0.0F, 4.0F).des("Category Rect Outline Width").whenTrue(this.categoryRectOutline).whenAtMode(this.page, Page.CategoryBars);
/*  72 */     this.categoryRectOutlineBottomLineToggle = setting("RectOutlineBottomToggle", false).des("Category Rect Outline Bottom Toggle").whenTrue(this.categoryRectOutline).whenAtMode(this.page, Page.CategoryBars);
/*  73 */     this.categoryRectOutlineColor = setting("RectOutlineColor", new Color((new Color(255, 255, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 255)).des("Category Rect Outline Color").whenTrue(this.categoryRectOutline).whenAtMode(this.page, Page.CategoryBars);
/*     */     
/*  75 */     this.categoryRectColor = setting("RectColor", new Color((new Color(68, 0, 164, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 68, 0, 164, 255)).des("Category Rect Color").whenAtMode(this.page, Page.CategoryBars);
/*     */     
/*  77 */     this.categoryGlow = setting("RectGlow", true).des("Category Rect Glow").whenAtMode(this.page, Page.CategoryBars);
/*  78 */     this.categoryGlowWidth = setting("RectGlowWidth", 40.0F, -150.0F, 150.0F).des("Category Rect Glow Width").whenTrue(this.categoryGlow).whenAtMode(this.page, Page.CategoryBars);
/*  79 */     this.categoryGlowHeight = setting("RectGlowHeight", 38.6F, -50.0F, 50.0F).des("Category Rect Glow Height").whenTrue(this.categoryGlow).whenAtMode(this.page, Page.CategoryBars);
/*  80 */     this.categoryGlowColor = setting("RectGlowColor", new Color((new Color(100, 45, 255, 176)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 45, 255, 176)).des("Category Rect Glow Color").whenTrue(this.categoryGlow).whenAtMode(this.page, Page.CategoryBars);
/*     */     
/*  82 */     this.categoryRectHoverEffect = setting("RectHoverEffect", true).des("Category Rect Hover Effect").whenAtMode(this.page, Page.CategoryBars);
/*  83 */     this.categoryRectHoverParticlesMode = setting("RectHoverParticles", CategoryRectHoverParticlesMode.Triangles).des("Category Rect Hover Particles").whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  84 */     this.categoryRectHoverParticlesStartXOffset = setting("RHoverParticlesStartX", 10.8F, 0.0F, 50.0F).des("Category Rect Hover Start X Offset").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  85 */     this.categoryRectHoverParticlesEndXOffset = setting("RHoverParticlesEndX", 10.8F, 0.0F, 50.0F).des("Category Rect Hover End X Offset").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  86 */     this.categoryRectHoverParticlesScaleFadeMode = setting("RectHoverParticlesFade", CategoryRectHoverParticlesScaleFadeMode.Both).des("Category Rect Hover Particles Fade").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  87 */     this.categoryRectHoverParticlesTrianglesSpin = setting("RHoverParticlesTriangleSpin", true).des("Category Rect Hover Particles Triangle Spin").only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  88 */     this.categoryRectHoverParticlesRandomTriangleSpinSpeed = setting("RHPRandomTriSpinSpeed", true).des("Category Rect Hover Particles Random Triangle Spin Speed").whenTrue(this.categoryRectHoverParticlesTrianglesSpin).only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  89 */     this.categoryRectHoverParticlesRandomTriangleSpinSpeedMax = setting("RHPRandomTriSpinSpeedMax", 2.6F, 0.0F, 10.0F).des("Category Rect Hover Particles Random Triangle Spin Speed Max").whenTrue(this.categoryRectHoverParticlesRandomTriangleSpinSpeed).whenTrue(this.categoryRectHoverParticlesTrianglesSpin).only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  90 */     this.categoryRectHoverParticlesRandomTriangleSpinSpeedMin = setting("RHPRandomTriSpinSpeedMin", 0.1F, 0.0F, 10.0F).des("Category Rect Hover Particles Random Triangle Spin Speed Min").whenTrue(this.categoryRectHoverParticlesRandomTriangleSpinSpeed).whenTrue(this.categoryRectHoverParticlesTrianglesSpin).only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  91 */     this.categoryRectHoverParticlesTrianglesSpinSpeed = setting("RHoverParticlesTriSpinSpeed", 1.0F, 0.0F, 5.0F).des("Category Rect Hover Particles Triangle Spin Speed").whenFalse(this.categoryRectHoverParticlesRandomTriangleSpinSpeed).whenTrue(this.categoryRectHoverParticlesTrianglesSpin).only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  92 */     this.categoryRectHoverParticlesTriangleRandomAngle = setting("RHParticlesRandomTriAngle", false).des("Category Rect Hover Particles Random Triangle Tilt").whenFalse(this.categoryRectHoverParticlesTrianglesSpin).only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  93 */     this.categoryRectHoverParticlesTrianglesAngle = setting("RHoverParticlesTriAngle", 0.0F, 0.0F, 360.0F).des("Category Rect Hover Particles Triangle Tilt").whenFalse(this.categoryRectHoverParticlesTriangleRandomAngle).whenFalse(this.categoryRectHoverParticlesTrianglesSpin).only(v -> (this.categoryRectHoverParticlesMode.getValue() == CategoryRectHoverParticlesMode.Triangles)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  94 */     this.categoryRectHoverParticlesGenerateRate = setting("RHParticlesGenerateRate", 0.3F, 0.1F, 3.0F).des("Category Rect Hover Particles Generate Rate").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  95 */     this.categoryRectHoverParticlesRiseSpeedRandom = setting("RHParticlesRandomSpeed", true).des("Category Rect Hover Particles Random Rise Speed").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  96 */     this.categoryRectHoverParticlesRiseSpeed = setting("RHoverParticlesUpSpeed", 0.5F, 0.0F, 2.0F).des("Category Rect Hover Particles Rise Speed").whenFalse(this.categoryRectHoverParticlesRiseSpeedRandom).only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  97 */     this.categoryRectHoverParticlesRiseSpeedRandomMax = setting("RHPRandomMaxRiseSpeed", 1.0F, 0.0F, 2.0F).des("Category Rect Hover Particles Random Max Speed").whenTrue(this.categoryRectHoverParticlesRiseSpeedRandom).only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  98 */     this.categoryRectHoverParticlesRiseSpeedRandomMin = setting("RHPRandomMinRiseSpeed", 0.1F, 0.0F, 2.0F).des("Category Rect Hover Particles Random Min Speed").whenTrue(this.categoryRectHoverParticlesRiseSpeedRandom).only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*  99 */     this.categoryRectHoverParticlesRandomSize = setting("RHoverParticlesRandomSize", true).des("Category Rect Hover Particles Random Size").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 100 */     this.categoryRectHoverParticlesRandomSizeMax = setting("RHParticlesRandomSizeMax", 6.0F, 0.0F, 7.0F).des("Category Rect Hover Particles Random Size Max").whenTrue(this.categoryRectHoverParticlesRandomSize).only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 101 */     this.categoryRectHoverParticlesRandomSizeMin = setting("RHParticlesRandomSizeMin", 0.9F, 0.0F, 7.0F).des("Category Rect Hover Particles Random Size Min").whenTrue(this.categoryRectHoverParticlesRandomSize).only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 102 */     this.categoryRectHoverParticlesSize = setting("RHoverParticlesSize", 5.0F, 0.0F, 7.0F).des("Category Rect Hover Particles Size").whenFalse(this.categoryRectHoverParticlesRandomSize).only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 103 */     this.categoryRectHoverParticlesHeightCap = setting("RHoverParticlesYCap", 88.7F, 0.1F, 100.0F).des("Category Rect Hover Particles Fade Height").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 104 */     this.categoryRectHoverParticlesAlphaFadeFactor = setting("RHParticlesAlphaFadeFactor", 3.2F, 0.0F, 5.0F).des("Category Rect Hover Particles Alpha Fade Speed").only(v -> ((this.categoryRectHoverParticlesScaleFadeMode.getValue() == CategoryRectHoverParticlesScaleFadeMode.Alpha || this.categoryRectHoverParticlesScaleFadeMode.getValue() == CategoryRectHoverParticlesScaleFadeMode.Both) && this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 105 */     this.categoryRectHoverParticlesScaleFadeFactor = setting("RHParticlesScaleFadeFactor", 5.3F, 0.0F, 10.0F).des("Category Rect Hover Particles Scale Fade Speed").only(v -> ((this.categoryRectHoverParticlesScaleFadeMode.getValue() == CategoryRectHoverParticlesScaleFadeMode.Scale || this.categoryRectHoverParticlesScaleFadeMode.getValue() == CategoryRectHoverParticlesScaleFadeMode.Both) && this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 106 */     this.categoryRectHoverParticlesColor = setting("RHoverParticlesColor", new Color((new Color(120, 60, 255, 221)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 60, 255, 221)).des("Category Rect Hover Particles Color").only(v -> (this.categoryRectHoverParticlesMode.getValue() != CategoryRectHoverParticlesMode.None)).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 107 */     this.categoryRectHoverDifColor = setting("RectHoverDifColor", true).des("Category Rect Hover Color Change").whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 108 */     this.categoryRectHoverColorSmooth = setting("RectHoverColorSmooth", true).des("Category Rect Hover Color Change Animation").whenTrue(this.categoryRectHoverEffect).whenTrue(this.categoryRectHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/* 109 */     this.categoryRectHoverColorSmoothFactorIn = setting("RHoverColorSmoothFactorIn", 3.6F, 0.4F, 10.0F).des("Category Rect Hover Color Change Animation Speed In").whenTrue(this.categoryRectHoverEffect).whenTrue(this.categoryRectHoverColorSmooth).whenTrue(this.categoryRectHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/* 110 */     this.categoryRectHoverColorSmoothFactorOut = setting("RHoverColorSmoothFactorOut", 1.2F, 0.4F, 10.0F).des("Category Rect Hover Color Change Animation Speed Out").whenTrue(this.categoryRectHoverEffect).whenTrue(this.categoryRectHoverColorSmooth).whenTrue(this.categoryRectHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/* 111 */     this.categoryRectHoverColor = setting("RectHoverColor", new Color((new Color(122, 64, 255, 221)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 122, 64, 255, 221)).des("Category Rect Hover Color").whenTrue(this.categoryRectHoverEffect).whenTrue(this.categoryRectHoverDifColor).whenAtMode(this.page, Page.CategoryBars);
/* 112 */     this.categoryRectHoverTextScale = setting("RectHoverTextScale", true).des("Category Rect Text Scale On Hover").whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 113 */     this.categoryRectHoverTextScaleNewScale = setting("RHoverTextNewScale", 1.0F, 0.1F, 2.0F).des("Category Rect Hover Text New Scale").whenTrue(this.categoryRectHoverTextScale).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 114 */     this.categoryRectHoverTextScaleFactorIn = setting("RHTScaleAnimateFactorIn", 1.0F, 0.1F, 3.0F).des("Category Rect Hover Text Scale Animation Speed In").whenTrue(this.categoryRectHoverTextScale).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 115 */     this.categoryRectHoverTextScaleFactorOut = setting("RHTScaleAnimateFactorOut", 0.5F, 0.1F, 3.0F).des("Category Rect Hover Text Scale Animation Speed Out").whenTrue(this.categoryRectHoverTextScale).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 116 */     this.categoryRectHoverShadowGradientAlpha = setting("RHoverShadowGradientAlpha", false).des("Category Rect Hover Shadow Gradient Alpha Change").whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 117 */     this.categoryRectHoverShadowGradientAlphaSmooth = setting("RHoverShadowGAnimate", true).des("Category Rect Hover Shadow Gradient Alpha Change Animation").whenTrue(this.categoryRectHoverShadowGradientAlpha).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 118 */     this.categoryRectHoverShadowGradientNewAlpha = setting("RHoverShadowGNewAlpha", 100, 0, 255).des("Category Rect Hover Shadow Gradient New Alpha").whenTrue(this.categoryRectHoverShadowGradientAlphaSmooth).whenTrue(this.categoryRectHoverShadowGradientAlpha).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 119 */     this.categoryRectHoverShadowGradientFactorIn = setting("RHShadowGAnimateFactorIn", 1.0F, 0.1F, 10.0F).des("Category Rect Hover Shadow Gradient Scale Animation Speed In").whenTrue(this.categoryRectHoverShadowGradientAlphaSmooth).whenTrue(this.categoryRectHoverShadowGradientAlpha).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/* 120 */     this.categoryRectHoverShadowGradientFactorOut = setting("RHShadowGAnimateFactorOut", 1.0F, 0.1F, 10.0F).des("Category Rect Hover Shadow Gradient Scale Animation Speed Out").whenTrue(this.categoryRectHoverShadowGradientAlphaSmooth).whenTrue(this.categoryRectHoverShadowGradientAlpha).whenTrue(this.categoryRectHoverEffect).whenAtMode(this.page, Page.CategoryBars);
/*     */     
/* 122 */     this.categoryIcons = setting("CategoryIcons", true).des("Draw Category Icons").whenAtMode(this.page, Page.CategoryBars);
/* 123 */     this.categoryIconsSide = setting("CategoryIconsSide", CategoryIconsSides.Left).des("Category Icons Side").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 124 */     this.categoryIconsX = setting("CategoryIconsX", 3.4F, -30.0F, 30.0F).des("Category Icons X Offset").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 125 */     this.categoryIconsY = setting("CategoryIconsY", -3.2F, -10.0F, 10.0F).des("Category Icons Y Offset").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 126 */     this.categoryIconsScale = setting("CategoryIconsSize", 1.1F, 0.0F, 2.0F).des("Category Icons Size").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 127 */     this.categoryIconsColor = setting("CategoryIconsColor", new Color((new Color(255, 255, 255, 165)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 165)).des("Category Icons Color").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 128 */     this.categoryIconsBG = setting("CategoryIconsBG", true).des("Draw Category Icons BG").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 129 */     this.categoryIconsBGScaleOutside = setting("CIconsBGScale", 0.8F, 0.0F, 1.0F).des("Category Icons BG Scale").whenTrue(this.categoryIconsBG).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 130 */     this.categoryIconsBGSideX = setting("CIconsBGSideX", 15.8F, -30.0F, 30.0F).des("Category Icons BG Side X Offset").whenTrue(this.categoryIconsBG).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 131 */     this.categoryIconsBGSideFade = setting("CIconsBGSideFade", true).des("Category Icons BG Side Fade").whenTrue(this.categoryIconsBG).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 132 */     this.categoryIconsBGSideFadeSize = setting("CIconsBGSideFadeSize", 5.8F, -30.0F, 70.0F).des("Category Icons BG Side Fade Size").whenTrue(this.categoryIconsBGSideFade).whenTrue(this.categoryIconsBG).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 133 */     this.categoryIconsBGColor = setting("CIconsBGColor", new Color((new Color(0, 0, 0, 93)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 93)).des("Category Icons BG Color").whenTrue(this.categoryIconsBG).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 134 */     this.categoryIconsGlow = setting("CIconsGlow", false).des("Category Icons Glow").whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 135 */     this.categoryIconsGlowSize = setting("CIconsGlowSize", 12.0F, 0.0F, 15.0F).des("Category Icons Glow Size").whenTrue(this.categoryIconsGlow).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/* 136 */     this.categoryIconsGlowColor = setting("CIconsGlowColor", new Color((new Color(255, 255, 255, 70)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 70)).des("Category Icons Glow Color").whenTrue(this.categoryIconsGlow).whenTrue(this.categoryIcons).whenAtMode(this.page, Page.CategoryBars);
/*     */     
/* 138 */     this.categoryBar = setting("CategoryBar", true).des("Bar At The Bottom of Category Rect").whenAtMode(this.page, Page.BorderBars);
/* 139 */     this.categoryBarX = setting("CategoryBarX", -0.2F, -25.0F, 25.0F).des("X Of Category Bottom Bar").whenTrue(this.categoryBar).whenAtMode(this.page, Page.BorderBars);
/* 140 */     this.categoryBarY = setting("CategoryBarY", 0.0F, -25.0F, 25.0F).des("Y Of Category Bottom Bar").whenTrue(this.categoryBar).whenAtMode(this.page, Page.BorderBars);
/* 141 */     this.categoryBarXScale = setting("CategoryBarXScale", 0.0F, -50.0F, 50.0F).des("Length Factor Of Category Bottom Bar").whenTrue(this.categoryBar).whenAtMode(this.page, Page.BorderBars);
/* 142 */     this.categoryBarYScale = setting("CategoryBarYScale", 0.0F, -4.0F, 4.0F).des("Height Factor Of Category Bottom Bar").whenTrue(this.categoryBar).whenAtMode(this.page, Page.BorderBars);
/* 143 */     this.barColor = setting("BarColor", new Color((new Color(0, 0, 0, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 255)).des("Category Bottom Bar Color").whenTrue(this.categoryBar).whenAtMode(this.page, Page.BorderBars);
/* 144 */     this.categoryGradient = setting("CategoryFade", true).des("Gradient Bar At The Bottom of Category Rect").whenAtMode(this.page, Page.BorderBars);
/* 145 */     this.categoryGradientX = setting("CategoryFadeX", 0.0F, -25.0F, 25.0F).des("X Of Category Bottom Gradient Bar").whenTrue(this.categoryGradient).whenAtMode(this.page, Page.BorderBars);
/* 146 */     this.categoryGradientY = setting("CategoryFadeY", 2.8F, -25.0F, 25.0F).des("Y Of Category Bottom Gradient Bar").whenTrue(this.categoryGradient).whenAtMode(this.page, Page.BorderBars);
/* 147 */     this.categoryGradientXScale = setting("CategoryFadeXScale", 0.0F, -100.0F, 100.0F).des("Length Factor Of Category Bottom Gradient Bar").whenTrue(this.categoryGradient).whenAtMode(this.page, Page.BorderBars);
/* 148 */     this.categoryGradientYScale = setting("CategoryFadeYScale", 22.7F, 0.0F, 100.0F).des("Height Factor Of Category Bottom Gradient Bar").whenTrue(this.categoryGradient).whenAtMode(this.page, Page.BorderBars);
/* 149 */     this.gradientBarColor = setting("CategoryBGradientColor", new Color((new Color(0, 0, 0, 115)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 115)).des("Category Bottom Gradient Color").whenTrue(this.categoryGradient).whenAtMode(this.page, Page.BorderBars);
/*     */     
/* 151 */     this.bottomGradient = setting("BottomGradient", true).des("Panel Bottom Gradient").whenAtMode(this.page, Page.BorderBars);
/* 152 */     this.bottomGradientWidth = setting("PBottomHeight", 17.8F, 0.0F, 100.0F).des("Panel Bottom Gradient Width").whenTrue(this.bottomGradient).whenAtMode(this.page, Page.BorderBars);
/* 153 */     this.panelBottomGradientColor = setting("PBottomColor", new Color((new Color(0, 0, 0, 60)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 60)).des("Panel Bottom Gradient Color").whenTrue(this.bottomGradient).whenAtMode(this.page, Page.BorderBars);
/*     */     
/* 155 */     this.guiCategoryShadow = setting("TopShadow", true).des("GUI Category Rectangle Shadow").whenAtMode(this.page, Page.Shadow);
/* 156 */     this.shadowRadiusCategory = setting("TopRadius", 0.7F, 0.0F, 1.0F).des("Category Rectangle Shadow Radius").whenTrue(this.guiCategoryShadow).whenAtMode(this.page, Page.Shadow);
/* 157 */     this.shadowAlpha = setting("TopShadowAlpha", 108, 0, 255).des("Category Rectangle Shadow Alpha").whenTrue(this.guiCategoryShadow).whenAtMode(this.page, Page.Shadow);
/* 158 */     this.shadowSizeFactorX = setting("TopShadowSizeX", 1.2F, 0.0F, 4.0F).des("Category Rectangle Size Of Shadow Horizontal").whenTrue(this.guiCategoryShadow).whenAtMode(this.page, Page.Shadow);
/* 159 */     this.shadowSizeFactorY = setting("TopShadowSizeY", 2.7F, 0.0F, 4.0F).des("Category Rectangle Size Of Shadow Vertical").whenTrue(this.guiCategoryShadow).whenAtMode(this.page, Page.Shadow);
/* 160 */     this.guiModuleShadow = setting("ModuleShadow", true).des("GUI Module Rectangle Shadow").whenAtMode(this.page, Page.Shadow);
/* 161 */     this.guiModuleShadowFilled = setting("MShadowFilled", false).des("Fill In Center Of GUI Modules Shadow").whenTrue(this.guiModuleShadow).whenAtMode(this.page, Page.Shadow);
/* 162 */     this.shadowAlphaModules = setting("MShadowAlpha", 122, 0, 255).des("Modules Panel Shadow Alpha").whenTrue(this.guiModuleShadow).whenAtMode(this.page, Page.Shadow);
/* 163 */     this.moduleShadowSizeFactor = setting("MShadowSize", 0.2F, 0.0F, 1.0F).des("Modules Panel Size Of Shadow").whenTrue(this.guiModuleShadow).whenAtMode(this.page, Page.Shadow);
/*     */     
/* 165 */     this.moduleRectRounded = setting("ModuleRectRound", false).des("Module Rect Rounded Corners").whenAtMode(this.page, Page.Panel);
/* 166 */     this.moduleRectRoundedRadius = setting("ModuleCornerRadius", 1.0F, 0.0F, 1.0F).des("Rounded Module Corner Radius").whenTrue(this.moduleRectRounded).whenAtMode(this.page, Page.Panel);
/* 167 */     this.moduleRoundedTopRight = setting("MRoundedTopRight", true).des("Rounded Module Arc Top Right").whenTrue(this.moduleRectRounded).whenAtMode(this.page, Page.Panel);
/* 168 */     this.moduleRoundedTopLeft = setting("MRoundedTopLeft", true).des("Rounded Module Arc Top Left").whenTrue(this.moduleRectRounded).whenAtMode(this.page, Page.Panel);
/* 169 */     this.moduleRoundedBottomRight = setting("MRoundedDownRight", true).des("Rounded Module Arc Bottom Right").whenTrue(this.moduleRectRounded).whenAtMode(this.page, Page.Panel);
/* 170 */     this.moduleRoundedBottomLeft = setting("MRoundedDownLeft", true).des("Rounded Module Arc Bottom Left").whenTrue(this.moduleRectRounded).whenAtMode(this.page, Page.Panel);
/* 171 */     this.moduleRectOutline = setting("ModuleRectOutline", false).des("Module Rect Outlines").whenAtMode(this.page, Page.Panel);
/* 172 */     this.moduleRectOutlineLineWidth = setting("MRectOutlineThick", 0.9F, 0.0F, 4.0F).des("Module Rect Outlines Line Width").whenTrue(this.moduleRectOutline).whenAtMode(this.page, Page.Panel);
/* 173 */     this.moduleRectOutlineColor = setting("MRectOutlineColor", new Color((new Color(120, 61, 255, 170)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 61, 255, 170)).des("Module Rect Outlines Color").whenTrue(this.moduleRectOutline).whenAtMode(this.page, Page.Panel);
/*     */     
/* 175 */     this.moduleImageDescrip = setting("ModuleMiniIcon", true).des("Display Small Image Of Module Next To Name").whenAtMode(this.page, Page.Panel);
/* 176 */     this.moduleImageDescripGlow = setting("ModuleMiniIconGlow", true).des("Module Mini Image Glow").whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 177 */     this.moduleImageDescripGlowRadius = setting("MMiniIconGlowRadius", 12.0F, 0.0F, 15.0F).des("Module Mini Image Glow Radius").whenTrue(this.moduleImageDescripGlow).whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 178 */     this.moduleImageDescripGlowAlpha = setting("MMiniIconGlowAlpha", 60, 0, 255).des("Module Mini Image Glow Alpha").whenTrue(this.moduleImageDescripGlow).whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 179 */     this.moduleImageDescripColor = setting("MMiniIconColor", new Color((new Color(81, 81, 81, 76)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 81, 81, 81, 76)).des("Module Mini Image Color").whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 180 */     this.moduleImageDescripDisableOnModuleEnable = setting("MMiniIconEnabledDisable", false).des("Don't Draw Module Mini Icon When Module Is Enabled").whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 181 */     this.moduleMiniIconSide = setting("MMiniIconHardSide", ModuleMiniIconSide.HardLeft).des("Module Mini Image Side").whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 182 */     this.moduleMiniIconXOffset = setting("MMiniIconX", 0, -50, 50).des("Module Mini Image X Offset").whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Panel);
/* 183 */     this.moduleTextExtendedMove = setting("MTextExtendedMove", true).des("Module Text Extended Move").only(v -> (CustomFont.instance.moduleTextPos.getValue() != CustomFont.TextPos.Center)).whenAtMode(this.page, Page.Panel);
/* 184 */     this.moduleNameHardMoveRightSide = setting("RightESModuleShift", false).des("Make All Module Names Move To Make Room For Right Rect").whenAtMode(this.page, Page.Panel);
/* 185 */     this.moduleNameHardMoveLeftSide = setting("LeftESModuleShift", false).des("Make All Module Names Move To Make Room For Left Rect").whenAtMode(this.page, Page.Panel);
/* 186 */     this.moduleGap = setting("ModuleGap", 0, -1, 13).des("Module Rect Height").whenAtMode(this.page, Page.Panel);
/*     */     
/* 188 */     this.moduleHoverStuff = setting("HoverRender", true).des("Do Stuff When Module Is Hovered").whenAtMode(this.page, Page.Panel);
/* 189 */     this.moduleHoverFadeFactor = setting("HoverFade", 20, 1, 100).des("Module Hover Alpha Fade Factor").whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/* 190 */     this.moduleHoverStartAlpha = setting("HoverStartAlpha", 33, 0, 255).des("Module Hover Start Alpha").whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/* 191 */     this.moduleHoverScaleFade = setting("HoverScaleFade", HoverScaleFadeMode.None).des("Module Hover Scale Fade").whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/* 192 */     this.moduleHoverScaleFadeFactor = setting("HoverScaleFadeFactor", 8.9F, 0.0F, 20.0F).des("Module Hover Scale Fade Speed").whenTrue(this.moduleHoverStuff).only(v -> (this.moduleHoverScaleFade.getValue() != HoverScaleFadeMode.None)).whenAtMode(this.page, Page.Panel);
/* 193 */     this.moduleHoverTextScale = setting("HoverTextScale", true).des("Module Hover Text Scale").whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/* 194 */     this.moduleHoverTextScaleNewScale = setting("HoverTextNewScale", 0.2F, 0.1F, 2.0F).des("Module Hover Text New Scale").whenTrue(this.moduleHoverTextScale).whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/* 195 */     this.moduleHoverTextScaleFactorIn = setting("HTScaleAnimateFactorIn", 1.6F, 0.1F, 3.0F).des("Module Hover Text Scale Animation Speed In").whenTrue(this.moduleHoverTextScale).whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/* 196 */     this.moduleHoverTextScaleFactorOut = setting("HTScaleAnimateFactorOut", 0.6F, 0.1F, 3.0F).des("Module Hover Text Scale Animation Speed Out").whenTrue(this.moduleHoverTextScale).whenTrue(this.moduleHoverStuff).whenAtMode(this.page, Page.Panel);
/*     */     
/* 198 */     this.panelExtensions = setting("PanelExtensions", PanelExtensions.Both).des("Modules Panel Top Bottom Extra Space").whenAtMode(this.page, Page.Panel);
/* 199 */     this.panelExtensionsHeight = setting("PanelExtensionsHeight", 8, 0, 12).des("Panel Extensions Height").only(v -> (this.panelExtensions.getValue() != PanelExtensions.None)).whenAtMode(this.page, Page.Panel);
/*     */     
/* 201 */     this.moduleSeparators = setting("ModuleSeparators", true).des("Module Separator Bars").whenAtMode(this.page, Page.Panel);
/* 202 */     this.moduleSeparatorsOnTop = setting("MSeparatorsOnTop", false).des("Draw Module Separators On Top Of Module Rects").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 203 */     this.moduleSeparatorX = setting("MSeparatorsX", 0, -50, 50).des("Module Separator X").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 204 */     this.moduleSeparatorY = setting("MSeparatorsY", 0, -50, 50).des("Module Separator Y").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 205 */     this.moduleSeparatorWidth = setting("MSeparatorsWidth", 79, 0, 100).des("Module Separator Width").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 206 */     this.moduleSeparatorHeight = setting("MSeparatorsHeight", 3, 0, 10).des("Module Separator Height").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 207 */     this.moduleSeparatorGlow = setting("MSeparatorGlow", true).des("Module Separator Glow").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 208 */     this.moduleSeparatorGlowHeight = setting("MSGlowHeight", 10.0F, 0.0F, 10.0F).des("Module Separator Glow Height").whenTrue(this.moduleSeparatorGlow).whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 209 */     this.moduleSeparatorGlowAlpha = setting("MSGlowAlpha", 86, 0, 255).des("Module Separator Glow Alpha").whenTrue(this.moduleSeparatorGlow).whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 210 */     this.moduleSeparatorFadeMode = setting("MSFadeMode", ModuleSeparatorFadeMode.Right).des("Module Separator Fade Mode").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 211 */     this.moduleSeparatorFadeLength = setting("MSFadeLength", 0.0F, 0.0F, 1.0F).des("Length Of Module Separator Fade").only(v -> (this.moduleSeparatorFadeMode.getValue() != ModuleSeparatorFadeMode.None)).whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/* 212 */     this.moduleSeparatorColor = setting("MSeparatorColor", new Color((new Color(141, 141, 141, 40)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 141, 141, 141, 40)).des("Module Separator Color").whenTrue(this.moduleSeparators).whenAtMode(this.page, Page.Panel);
/*     */     
/* 214 */     this.moduleSideGlow = setting("ModuleSideGlow", ModuleSideGlow.Both).des("Module Gradients On Inner Panel").whenAtMode(this.page, Page.Panel);
/* 215 */     this.moduleSideGlowLayer = setting("MSideGlowOnTop", false).des("Draw Module Gradients On Top Of Module Rects").only(v -> (this.moduleSideGlow.getValue() != ModuleSideGlow.None)).whenAtMode(this.page, Page.Panel);
/* 216 */     this.moduleSideGlowDouble = setting("MSideGlowDouble", ModuleSideGlowDouble.Right).des("Draw Module Gradients Twice").only(v -> (this.moduleSideGlow.getValue() != ModuleSideGlow.None)).whenAtMode(this.page, Page.Panel);
/* 217 */     this.moduleSideGlowDoubleWidth = setting("MSideGlowDoubleWidth", 23.7F, 0.0F, 100.0F).des("Double Module Gradient Width").only(v -> (this.moduleSideGlowDouble.getValue() != ModuleSideGlowDouble.None)).only(v -> (this.moduleSideGlow.getValue() != ModuleSideGlow.None)).whenAtMode(this.page, Page.Panel);
/* 218 */     this.moduleSideGlowDoubleAlpha = setting("MSideDoubleAlpha", 20, 0, 255).des("Double Module Gradient Alpha").only(v -> (this.moduleSideGlowDouble.getValue() != ModuleSideGlowDouble.None)).only(v -> (this.moduleSideGlow.getValue() != ModuleSideGlow.None)).whenAtMode(this.page, Page.Panel);
/* 219 */     this.moduleSideGlowWidth = setting("SideGlowWidth", 32.6F, 0.0F, 100.0F).des("Side Glow Width").only(v -> (this.moduleSideGlow.getValue() != ModuleSideGlow.None)).whenAtMode(this.page, Page.Panel);
/* 220 */     this.moduleSideGlowColor = setting("SideGlowColor", new Color((new Color(186, 186, 186, 80)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 186, 186, 186, 80)).des("Side Glow Color").only(v -> (this.moduleSideGlow.getValue() != ModuleSideGlow.None)).whenAtMode(this.page, Page.Panel);
/*     */     
/* 222 */     this.moduleColor = setting("ModuleColor", new Color((new Color(0, 0, 0, 69)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 69)).des("Module Color").whenAtMode(this.page, Page.Panel);
/* 223 */     this.moduleBGColor = setting("ModuleBGColor", new Color((new Color(0, 0, 0, 178)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 178)).des("Module BG Color").whenAtMode(this.page, Page.Panel);
/*     */     
/* 225 */     this.enabledRect = setting("EnabledRect", true).des("Module Enabled Full Rectangle").whenAtMode(this.page, Page.Enabled);
/* 226 */     this.enabledRectAnimation = setting("EnabledRectAnimate", EnabledRectAnimation.Alpha).des("Module Enabled Rect Animation").whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 227 */     this.enabledRectMove = setting("EnabledRectScale", EnabledRectMoveMode.All).des("Enabled Rect Scale Animation").only(v -> (this.enabledRectAnimation.getValue() == EnabledRectAnimation.Scale || this.enabledRectAnimation.getValue() == EnabledRectAnimation.Both)).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 228 */     this.enabledRectAnimationFactor = setting("ERectAnimateFactor", 1.7F, 0.4F, 3.0F).des("Enabled Rect Animation Speed").only(v -> (this.enabledRectAnimation.getValue() != EnabledRectAnimation.None)).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 229 */     this.enabledRectBrightnessRoll = setting("ERectBrightnessRoll", true).des("Module Enabled Rect Rolling Brightness").whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 230 */     this.enabledRectBrightRollAxis = setting("ERectBrightRollAxis", EnabledRectBrightRollAxis.Y).des("Module Enabled Rect Rolling Brightness Axis").whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 231 */     this.enabledRectBrightRollDirectionX = setting("ERBrightRollDirectionX", EnabledRectBrightRollDirectionX.Left).des("Module Enabled Rect Rolling Brightness Direction").only(v -> (this.enabledRectBrightRollAxis.getValue() == EnabledRectBrightRollAxis.X)).whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 232 */     this.enabledRectBrightRollDirectionY = setting("ERBrightRollDirectionY", EnabledRectBrightRollDirectionY.Down).des("Module Enabled Rect Rolling Brightness Direction").only(v -> (this.enabledRectBrightRollAxis.getValue() == EnabledRectBrightRollAxis.Y)).whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 233 */     this.enabledRectBrightRollSpeed = setting("ERectBrightRollSpeed", 3.6F, 0.0F, 15.0F).des("Module Enabled Rect Rolling Brightness Speed").whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 234 */     this.enabledRectBrightRollMax = setting("ERectBrightRollMax", 1.0F, 0.0F, 1.0F).des("Module Enabled Rect Rolling Brightness Max").whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 235 */     this.enabledRectBrightRollMin = setting("ERectBrightRollMin", 0.2F, 0.0F, 1.0F).des("Module Enabled Rect Rolling Brightness Min").whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 236 */     this.enabledRectBrightRollLength = setting("ERectBrightRollLength", 0.6F, 0.0F, 1.0F).des("Module Enabled Rect Rolling Brightness Length").whenTrue(this.enabledRectBrightnessRoll).whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/* 237 */     this.enabledRectColor = setting("EnabledRectColor", new Color((new Color(69, 31, 255, 69)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 69, 31, 255, 69)).des("Enabled Rect Color").whenTrue(this.enabledRect).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 239 */     this.enabledSide = setting("EnabledSideRect", true).des("Module Enabled Side Rectangle").whenAtMode(this.page, Page.Enabled);
/* 240 */     this.enabledSideSide = setting("EnabledSideSide", EnabledSideSide.Right).des("Side Of Enabled Side").whenAtMode(this.page, Page.Enabled).whenTrue(this.enabledSide);
/* 241 */     this.enabledSideHeight = setting("EnabledSideHeight", 0.6F, 0.1F, 1.0F).des("Height Of Enabled Side").whenAtMode(this.page, Page.Enabled).whenTrue(this.enabledSide);
/* 242 */     this.enabledSideX = setting("EnabledSideX", 2.4F, -50.0F, 50.0F).des("X Of Enabled Side").whenAtMode(this.page, Page.Enabled).whenTrue(this.enabledSide);
/* 243 */     this.enabledSideY = setting("EnabledSideY", 1.4F, -13.0F, 13.0F).des("Y Of Enabled Side").whenAtMode(this.page, Page.Enabled).whenTrue(this.enabledSide);
/* 244 */     this.enabledSideSize = setting("EnabledSideSize", 4.9F, 0.0F, 20.0F).des("Enabled Shape Side Width").whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 245 */     this.enabledSideRound = setting("ESideRounded", true).des("Module Enabled Rounded Side Rect").whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 246 */     this.enabledSideRoundedFull = setting("ESideFullRounded", true).des("Module Enabled All Sides Rounded Side Rect").whenTrue(this.enabledSideRound).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 247 */     this.enabledSideRadius = setting("ESideCornerRad", 1.0F, 0.0F, 1.0F).des("Radius Of Rounded Enabled Side Rect Corners").whenTrue(this.enabledSide).whenTrue(this.enabledSideRound).whenAtMode(this.page, Page.Enabled);
/* 248 */     this.enabledSideMove = setting("EnabledSideMove", true).des("Enabled Side Move").whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 249 */     this.enabledSideMoveX = setting("EnabledSideMoveX", true).des("Enabled Side Move X").whenTrue(this.enabledSideMove).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 250 */     this.enabledSideMoveFactor = setting("ESideMoveFactor", 1.0F, 0.4F, 3.0F).des("Enabled Shape Side Move Speed").whenTrue(this.enabledSideMove).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 251 */     this.enabledSideColorMode = setting("ESideColorEnable", false).des("Module Enabled Side Color Change Enabled Marker").whenFalse(this.enabledSideMove).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 252 */     this.enabledSideColorModeAnimation = setting("ESideColorAnimate", true).des("Module Enabled Side Color Change Animation").whenTrue(this.enabledSideColorMode).whenFalse(this.enabledSideMove).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 253 */     this.enabledSideColorModeAnimationFactor = setting("ESideColorAnimateFactor", 1.0F, 0.4F, 3.0F).des("Module Enabled SIde Color Change Animation Speed").whenTrue(this.enabledSideColorModeAnimation).whenTrue(this.enabledSideColorMode).whenFalse(this.enabledSideMove).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 254 */     this.enabledSideColor = setting("EnabledSideColor", new Color((new Color(100, 27, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 27, 255, 255)).des("Enabled Side Color").whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 255 */     this.disabledSideColorModeColor = setting("DisabledSideColor", new Color((new Color(47, 47, 47, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 47, 47, 47, 255)).des("Side Disabled Color Mode Color").whenTrue(this.enabledSideColorMode).whenFalse(this.enabledSideMove).whenTrue(this.enabledSide).whenAtMode(this.page, Page.Enabled);
/* 256 */     this.enabledRectScaleFade = setting("ERectScaleFade", true).des("Enabled Shape Rect Scale Out And Fade").whenAtMode(this.page, Page.Enabled);
/* 257 */     this.enabledRectScaleOnWhat = setting("ERectScaleWhen", EnableDisableScaleRect.Enable).des("Enabled Shape Rect Scale On Enable Or Disable").whenAtMode(this.page, Page.Enabled);
/* 258 */     this.enabledRectScaleX = setting("ERScaleX", 33.0F, 0.0F, 100.0F).des("Enabled Shape Rect Scale X").whenTrue(this.enabledRectScaleFade).whenAtMode(this.page, Page.Enabled);
/* 259 */     this.enabledRectScaleY = setting("ERScaleY", 34.0F, 0.0F, 100.0F).des("Enabled Shape Rect Scale Y").whenTrue(this.enabledRectScaleFade).whenAtMode(this.page, Page.Enabled);
/* 260 */     this.enabledRectScaleFactor = setting("ERScaleFactor", 0.6F, 0.3F, 3.0F).des("Enabled Shape Rect Move Speed").whenTrue(this.enabledRectScaleFade).whenAtMode(this.page, Page.Enabled);
/* 261 */     this.enabledRectStartAlpha = setting("ERStartAlpha", 162, 0, 255).des("Enabled Shape Rect Start Alpha").whenTrue(this.enabledRectScaleFade).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 263 */     this.moduleTextNoMove = setting("ModuleTextNoMove", false).des("Module Text No Move On Enable").whenTrue(this.enabledSide).whenAtMode(this.page, Page.Panel);
/*     */     
/* 265 */     this.enabledSideIconXOffset = setting("EnabledSideIconX", 0.0F, -20.0F, 20.0F).des("Module Enabled Side Icon X Offset").whenAtMode(this.page, Page.Enabled);
/* 266 */     this.enabledSideIconDifColor = setting("EnabledSideIcon", true).des("Module Enabled Side Icon Color").whenAtMode(this.page, Page.Enabled);
/* 267 */     this.enabledSideIconColorSmooth = setting("EnabledSideIconSmooth", true).des("Enabled Side Icon Color Animation").whenTrue(this.enabledSideIconDifColor).whenAtMode(this.page, Page.Enabled);
/* 268 */     this.enabledSideIconColorSmoothFactor = setting("ESideIconSmoothFactor", 1.0F, 0.4F, 3.0F).des("Enabled Side Icon Color Animation Speed").whenTrue(this.enabledSideIconColorSmooth).whenTrue(this.enabledSideIconDifColor).whenAtMode(this.page, Page.Enabled);
/* 269 */     this.enabledSideIconColor = setting("ESideIconColor", new Color((new Color(255, 255, 255, 144)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 144)).des("Enabled Side Icon Color").whenTrue(this.enabledSideIconDifColor).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 271 */     this.enabledTextDifColor = setting("EnabledText", true).des("Module Enabled Text Color").whenAtMode(this.page, Page.Enabled);
/* 272 */     this.enabledTextSmooth = setting("ETextAnimate", true).des("Module Enabled Text Animation").whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 273 */     this.enabledTextSmoothFactor = setting("ETextAnimateFactor", 0.8F, 0.4F, 3.0F).des("Module Enabled Text Animation Speed").whenTrue(this.enabledTextDifColor).whenTrue(this.enabledTextSmooth).whenAtMode(this.page, Page.Enabled);
/* 274 */     this.enabledTextBrightnessRoll = setting("ETextBrightnessRoll", false).des("Module Enabled Text Rolling Brightness").whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 275 */     this.enabledTextBrightRollAxis = setting("ETextBrightRollAxis", EnabledTextBrightRollAxis.Y).des("Module Enabled Text Rolling Brightness Axis").whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 276 */     this.enabledTextBrightRollDirectionX = setting("ETBrightRollDirectionX", EnabledTextBrightRollDirectionX.Left).des("Module Enabled Text Rolling Brightness Direction").only(v -> (this.enabledTextBrightRollAxis.getValue() == EnabledTextBrightRollAxis.X)).whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 277 */     this.enabledTextBrightRollDirectionY = setting("ETBrightRollDirectionY", EnabledTextBrightRollDirectionY.Down).des("Module Enabled Text Rolling Brightness Direction").only(v -> (this.enabledTextBrightRollAxis.getValue() == EnabledTextBrightRollAxis.Y)).whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 278 */     this.enabledTextBrightRollSpeed = setting("ETextBrightRollSpeed", 1.0F, 0.0F, 15.0F).des("Module Enabled Text Rolling Brightness Speed").whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 279 */     this.enabledTextBrightRollMax = setting("ETextBrightRollMax", 1.0F, 0.0F, 1.0F).des("Module Enabled Text Rolling Brightness Max").whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 280 */     this.enabledTextBrightRollMin = setting("ETextBrightRollMin", 0.0F, 0.0F, 1.0F).des("Module Enabled Text Rolling Brightness Min").whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 281 */     this.enabledTextBrightRollLength = setting("ETextBrightRollSize", 20.0F, 0.1F, 50.0F).des("Module Enabled Text Rolling Brightness Length").whenTrue(this.enabledTextBrightnessRoll).whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/* 282 */     this.enabledTextColor = setting("ETextColor", new Color((new Color(185, 185, 185, 204)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 185, 185, 185, 204)).des("Enabled Text Color").whenTrue(this.enabledTextDifColor).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 284 */     this.enabledGlow = setting("EnabledGlow", true).des("Module Enabled Glow").whenAtMode(this.page, Page.Enabled);
/* 285 */     this.enabledGlowRadius = setting("EnabledGlowRadius", 1.0F, 0.0F, 1.0F).des("Module Enabled Glow Corner Radius").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/* 286 */     this.enabledGlowX = setting("EnabledGlowX", 52, -100, 100).des("Module Enabled Glow X").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/* 287 */     this.enabledGlowY = setting("EnabledGlowY", 1, -15, 15).des("Module Enabled Glow Y").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/* 288 */     this.enabledGlowXScale = setting("EGlowXScale", -66, -100, 100).des("Module Enabled Glow X Scale").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/* 289 */     this.enabledGlowYScale = setting("EGlowYScale", 28, -100, 100).des("Module Enabled Glow Y Scale").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/* 290 */     this.enabledGlowMoveSideXOffset = setting("EGMoveWithSideX", true).des("Module Enabled Glow Move With Side Rect X Offset").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/* 291 */     this.enabledGlowColor = setting("EnabledGlowColor", new Color((new Color(106, 47, 255, 115)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 106, 47, 255, 115)).des("Enabled Glow Color").whenTrue(this.enabledGlow).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 293 */     this.enabledTextGlow = setting("EnabledTextGlow", false).des("Module Text Glow Gradient").whenAtMode(this.page, Page.Enabled);
/* 294 */     this.enabledTextGlowX = setting("EGTextXScale", 8, -50, 50).des("Enabled Glow Text X Scale").whenTrue(this.enabledTextGlow).whenAtMode(this.page, Page.Enabled);
/* 295 */     this.enabledTextGlowY = setting("EGTextYScale", 15, -50, 50).des("Enabled Glow Text Y Scale").whenTrue(this.enabledTextGlow).whenAtMode(this.page, Page.Enabled);
/* 296 */     this.enabledGlowTextRadius = setting("EGlowTextRadius", 0.7F, 0.0F, 1.0F).des("Enabled Glow Text Radius").whenTrue(this.enabledTextGlow).whenAtMode(this.page, Page.Enabled);
/* 297 */     this.enabledTextGlowColor = setting("ETextGlowColor", new Color((new Color(100, 61, 255, 145)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 61, 255, 145)).des("Enabled Text Glow Color").whenTrue(this.enabledTextGlow).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 299 */     this.enabledSideGlow = setting("EnabledSideGlow", true).des("Module Enabled Side Glow").whenAtMode(this.page, Page.Enabled);
/* 300 */     this.enabledGlowSideTop = setting("EGlowSideTop", false).des("Enabled Glow Draw Side On Top").whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 301 */     this.enabledGlowSideTopFactor = setting("EGSideTopFactor", 0.0F, -15.0F, 15.0F).des("Enabled Glow Side Top Size").whenTrue(this.enabledGlowSideTop).whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 302 */     this.enabledGlowSideBottom = setting("EGlowSideDown", false).des("Enabled Glow Draw Side On Bottom").whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 303 */     this.enabledGlowSideBottomFactor = setting("EGSideDownFactor", 0.0F, -15.0F, 15.0F).des("Enabled Glow Side Bottom Size").whenTrue(this.enabledGlowSideBottom).whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 304 */     this.enabledGlowSideRight = setting("EGlowSideRight", true).des("Enabled Glow Draw Side On Right").whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 305 */     this.enabledGlowSideRightFactor = setting("EGSideRightFactor", 50.5F, -100.0F, 100.0F).des("Enabled Glow Side Right Size").whenTrue(this.enabledGlowSideRight).whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 306 */     this.enabledGlowSideLeft = setting("EGlowSideLeft", false).des("Enabled Glow Draw Side On Left").whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 307 */     this.enabledGlowSideLeftFactor = setting("EGSideLeftFactor", 0.0F, -100.0F, 100.0F).des("Enabled Glow Side Left Size").whenTrue(this.enabledGlowSideLeft).whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 308 */     this.enabledSideGlowColor = setting("ESideGlowColor", new Color((new Color(68, 0, 164, 81)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 68, 0, 164, 81)).des("Enabled Side Glow Color").whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 309 */     this.enabledAllGlowFade = setting("EnabledAllGlowFade", true).des("Module Enabled All Glow Fade Animation").only(v -> (((Boolean)this.enabledSideGlow.getValue()).booleanValue() || ((Boolean)this.enabledGlow.getValue()).booleanValue() || ((Boolean)this.enabledTextGlow.getValue()).booleanValue())).whenTrue(this.enabledSideGlow).whenAtMode(this.page, Page.Enabled);
/* 310 */     this.enabledAllGlowAlphaFactor = setting("EAllGlowAlphaFactor", 1.4F, 0.4F, 3.0F).des("Module Enabled All Glow Fade Factor").only(v -> (((Boolean)this.enabledSideGlow.getValue()).booleanValue() || ((Boolean)this.enabledGlow.getValue()).booleanValue() || (((Boolean)this.enabledTextGlow.getValue()).booleanValue() && ((Boolean)this.enabledAllGlowFade.getValue()).booleanValue()))).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 312 */     this.enabledMiniIconDifColor = setting("EMiniIcon", false).des("Change Color Of Module Mini Icon On Enable").whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Enabled);
/* 313 */     this.enabledMiniIconColor = setting("EMiniIconColor", new Color((new Color(121, 121, 121, 91)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 121, 121, 121, 91)).des("Module Mini Icon Enabled Color").whenTrue(this.enabledMiniIconDifColor).whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Enabled);
/* 314 */     this.enabledMiniIconGlowAlpha = setting("EMIconGlowAlpha", 93, 0, 255).des("Module Mini Icon Glow Enabled Alpha").whenTrue(this.enabledMiniIconDifColor).whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Enabled);
/* 315 */     this.enabledMiniIconColorSmooth = setting("EMiniIconSmooth", true).des("Mini Icon Enable Color Animation").whenTrue(this.enabledMiniIconDifColor).whenTrue(this.moduleImageDescrip).whenAtMode(this.page, Page.Enabled);
/*     */     
/* 317 */     this.enabledColor = setting("EnabledColor", new Color((new Color(100, 27, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 27, 255, 255)).des("Enabled Color").whenAtMode(this.page, Page.Enabled);
/*     */     
/* 319 */     this.moduleExtendedIconScale = setting("SideIconScale", 0.8F, 0.1F, 1.5F).des("Size Of Icon On Side Of Module").whenAtMode(this.page, Page.SideIcon);
/* 320 */     this.sideIconMode = setting("SideIcon", SideIconMode.Dots).des("Icon On Side Of Module").whenAtMode(this.page, Page.SideIcon);
/* 321 */     this.sideIconSide = setting("SideIconSide", SideIconSide.Right).des("Icon On Side's Side").only(v -> (this.sideIconMode.getValue() != SideIconMode.None)).whenAtMode(this.page, Page.SideIcon);
/* 322 */     this.sideIconXOffset = setting("SideIconX", -1, -20, 50).des("Icon On Side X Offset").only(v -> (this.sideIconMode.getValue() != SideIconMode.None)).whenAtMode(this.page, Page.SideIcon);
/* 323 */     this.sideIconNoMove = setting("SideIconNoMove", false).des("Icon On Side No Move").whenTrue(this.enabledSide).only(v -> (this.sideIconMode.getValue() != SideIconMode.None)).whenAtMode(this.page, Page.SideIcon);
/* 324 */     this.sideIconNoSideRectDraw = setting("NoIconOnSideRect", false).des("Don't Render Icon When Side Rect Enable Is On").whenTrue(this.enabledSide).only(v -> (this.sideIconMode.getValue() != SideIconMode.None)).whenAtMode(this.page, Page.SideIcon);
/* 325 */     this.sideIconColor = setting("SIconColor", new Color((new Color(228, 228, 228, 40)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 228, 228, 228, 40)).des("Icon On Side Color").only(v -> (this.sideIconMode.getValue() != SideIconMode.None)).whenAtMode(this.page, Page.SideIcon);
/*     */     
/* 327 */     this.extendedWidth = setting("ExtendedWidth", 1.6F, 0.0F, 4.0F).des("Extended Line Width").whenAtMode(this.page, Page.Extended);
/* 328 */     this.extendedColor = setting("ExtendedColor", new Color((new Color(95, 27, 255, 166)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 95, 27, 255, 166)).des("Extended Line Color").whenAtMode(this.page, Page.Extended);
/* 329 */     this.extendedRectGap = setting("ExtendedRectGap", 0, -1, 15).des("Extended Rect Gap").whenAtMode(this.page, Page.Extended);
/* 330 */     this.extendedRectColor = setting("ExtendedRectColor", new Color((new Color(0, 0, 0, 40)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 40)).des("Extended Rect Color").whenAtMode(this.page, Page.Extended);
/*     */     
/* 332 */     this.extendedVerticalGradient = setting("ExtendedGradient", true).des("Vertical Extended Module Gradient").whenAtMode(this.page, Page.Extended);
/* 333 */     this.extendedGradientWidth = setting("EGradientWidth", 41.6F, 0.0F, 100.0F).des("Extended Gradient Width").whenTrue(this.extendedVerticalGradient).whenAtMode(this.page, Page.Extended);
/* 334 */     this.extendedGradientColor = setting("EGradientColor", new Color((new Color(108, 20, 255, 69)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 108, 20, 255, 69)).des("Extended Gradient Color").whenTrue(this.extendedVerticalGradient).whenAtMode(this.page, Page.Extended);
/*     */     
/* 336 */     this.extendedBottomExtensions = setting("ExtendedDownExtensions", true).des("Extended Bottom Extra Space").whenAtMode(this.page, Page.Extended);
/* 337 */     this.extendedBottomExtensionsHeight = setting("EDowExtensionsHeight", 6.0F, 0.0F, 16.0F).des("Extended Bottom Extra Space Height").whenTrue(this.extendedBottomExtensions).whenAtMode(this.page, Page.Extended);
/*     */     
/* 339 */     this.extendedTopBars = setting("ExtendedTopBars", true).des("Draw Bars At Top Of Extended Module").whenAtMode(this.page, Page.Extended);
/* 340 */     this.extendedCategoryBar = setting("EBar", true).des("Bar At The Top of Extended Module").whenTrue(this.extendedTopBars).whenAtMode(this.page, Page.Extended);
/* 341 */     this.extendedCategoryBarX = setting("EBarX", 0.0F, -25.0F, 25.0F).des("X Of Extended Module Bar").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryBar).whenAtMode(this.page, Page.Extended);
/* 342 */     this.extendedCategoryBarY = setting("EBarY", 0.0F, -25.0F, 25.0F).des("Y Of Extended Module Bar").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryBar).whenAtMode(this.page, Page.Extended);
/* 343 */     this.extendedCategoryBarXScale = setting("EBarXScale", 0.0F, -50.0F, 50.0F).des("Length Factor Of Extended Module Bar").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryBar).whenAtMode(this.page, Page.Extended);
/* 344 */     this.extendedCategoryBarYScale = setting("EBarYScale", 0.9F, -4.0F, 4.0F).des("Height Factor Of Extended Module Bar").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryBar).whenAtMode(this.page, Page.Extended);
/* 345 */     this.extendedBarColor = setting("ExtendedBarColor", new Color((new Color(0, 0, 0, 165)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 165)).des("Extended Module Bar Color").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryBar).whenAtMode(this.page, Page.Extended);
/* 346 */     this.extendedCategoryGradient = setting("ETopFade", true).des("Gradient Bar At The Top Of Extended Module").whenTrue(this.extendedTopBars).whenAtMode(this.page, Page.Extended);
/* 347 */     this.extendedCategoryGradientHeight = setting("ETopFadeHeight", 40.0F, 0.0F, 100.0F).des("Height Factor Of Extended Module Gradient Bar").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryGradient).whenAtMode(this.page, Page.Extended);
/* 348 */     this.extendedGradientBottom = setting("EDownFade", true).des("Gradient Bar At The Bottom Of Extended Module").whenAtMode(this.page, Page.Extended);
/* 349 */     this.extendedGradientBottomHeight = setting("EDownFadeHeight", 40.0F, 0.0F, 100.0F).des("Height Factor Of Extended Module Bottom Gradient").whenTrue(this.extendedGradientBottom).whenAtMode(this.page, Page.Extended);
/* 350 */     this.extendedTopDownGradientColor = setting("ETopDownGradientColor", new Color((new Color(0, 0, 0, 141)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 141)).des("Extended Top Down Gradient Color").whenTrue(this.extendedTopBars).whenTrue(this.extendedCategoryGradient).whenAtMode(this.page, Page.Extended);
/*     */     
/* 352 */     this.guiCategoryBase = setting("BaseRect", true).des("Draw Rectangle At The Bottom Of Categories").whenAtMode(this.page, Page.Outline);
/*     */     
/* 354 */     this.panelBaseShadow = setting("BaseRectShadow", true).des("Panel Base Rect Shadow").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Shadow);
/* 355 */     this.panelBaseShadowFilled = setting("BRectShadowFilled", true).des("Fill In Center Of Base Rect Shadow").whenTrue(this.guiCategoryBase).whenTrue(this.panelBaseShadow).whenAtMode(this.page, Page.Shadow);
/* 356 */     this.panelBaseShadowAlpha = setting("BRectShadowAlpha", 149, 0, 255).des("Base Rect Shadow Alpha").whenTrue(this.guiCategoryBase).whenTrue(this.panelBaseShadow).whenAtMode(this.page, Page.Shadow);
/* 357 */     this.panelBaseShadowHeight = setting("BRectShadowHeight", 26.6F, 0.0F, 30.0F).des("Base Rect Shadow Height").whenTrue(this.guiCategoryBase).whenTrue(this.panelBaseShadow).whenAtMode(this.page, Page.Shadow);
/* 358 */     this.panelBaseShadowWidth = setting("BRectShadowWidth", 18.1F, 0.0F, 30.0F).des("Base Rect Shadow Width").whenTrue(this.guiCategoryBase).whenTrue(this.panelBaseShadow).whenAtMode(this.page, Page.Shadow);
/* 359 */     this.panelBaseShadowRadius = setting("BRectShadowRadius", 0.8F, 0.0F, 1.0F).des("Base Rect Shadow Radius").whenTrue(this.guiCategoryBase).whenTrue(this.panelBaseShadow).whenAtMode(this.page, Page.Shadow);
/*     */ 
/*     */     
/* 362 */     this.baseGlow = setting("BaseRectGlow", true).des("Base Rect Glow").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 363 */     this.baseGlowWidth = setting("BRectGlowWidth", 40.0F, -150.0F, 150.0F).des("Base Rect Glow Width").whenTrue(this.guiCategoryBase).whenTrue(this.baseGlow).whenAtMode(this.page, Page.Outline);
/* 364 */     this.baseGlowHeight = setting("BRectGlowHeight", 36.7F, -50.0F, 50.0F).des("Base Rect Glow Height").whenTrue(this.guiCategoryBase).whenTrue(this.baseGlow).whenAtMode(this.page, Page.Outline);
/* 365 */     this.baseGlowColor = setting("BaseRectGlowColor", new Color((new Color(100, 45, 255, 100)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 45, 255, 100)).des("Base Rect Glow Color").whenTrue(this.guiCategoryBase).whenTrue(this.baseGlow).whenAtMode(this.page, Page.Outline);
/*     */     
/* 367 */     this.heightBase = setting("BaseHeight", 13.9F, 0.0F, 40.0F).des("Height Of Base").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 368 */     this.widthBase = setting("BaseWidth", 5.5F, 0.0F, 40.0F).des("Extra Width Of Base").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 369 */     this.baseAlpha = setting("BaseAlpha", 227, 0, 255).des("Base Alpha").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 370 */     this.baseOutline = setting("BaseOutline", false).des("Base Outline").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 371 */     this.baseOutlineTopToggle = setting("BOutlineTopToggle", false).des("Base Outline Top Line Toggle").whenTrue(this.baseOutline).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 372 */     this.baseOutlineWidth = setting("BaseOutlineWidth", 0.8F, 0.0F, 4.0F).des("Base Outline Width").whenTrue(this.baseOutline).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 373 */     this.baseOutlineColor = setting("BaseOutlineColor", new Color((new Color(230, 230, 230, 230)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 230, 230, 230, 230)).des("Base Outline Color").whenTrue(this.baseOutline).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/*     */     
/* 375 */     this.baseRectPattern = setting("BasePattern", BaseRectPattern.Circles).des("Base Geometric Patterns").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 376 */     this.baseRectPatternExtra = setting("BasePatternType", BaseRectPatternExtra.Single).des("Base Geometric Patterns Type").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 377 */     this.baseRectPatternSingleTrianglesExtra = setting("BPatternTrianglesType", BaseRectPatternTrianglesSingleExtra.Up).des("Base Triangle Pattern Type").only(v -> (this.baseRectPattern.getValue() == BaseRectPattern.Triangles && this.baseRectPatternExtra.getValue() == BaseRectPatternExtra.Single)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 378 */     this.baseRectPatternYOffset = setting("BPatternY", 1.9F, -15.0F, 15.0F).des("Base Pattern Y Offset").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 379 */     this.baseRectPatternSize = setting("BPatternSize", 1.9F, 0.0F, 20.0F).des("Base Pattern Size Of Shapes").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 380 */     this.baseRectPatternGap = setting("BPatternGap", 2.1F, 0.0F, 30.0F).des("Base Pattern Gap Between Shapes").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 381 */     this.baseRectPatternDoubleYGap = setting("BPatternDoubleGap", 2.2F, -15.0F, 15.0F).des("Base Pattern Y Gap Between Shapes").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None && this.baseRectPatternExtra.getValue() == BaseRectPatternExtra.Double)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 382 */     this.baseRectPatternAmount = setting("BPatternAmount", 3, 1, 15).des("Base Pattern Amount Of Shapes").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 383 */     this.baseRectPatternReflect = setting("BPatternReflect", true).des("Flip Base Pattern Upside Down").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None && this.baseRectPatternExtra.getValue() == BaseRectPatternExtra.Double)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 384 */     this.baseRectPatternShadow = setting("BPatternShadow", true).des("Base Pattern Shadow Gradient").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 385 */     this.baseRectPatternShadowRadius = setting("BPatternShadowRadius", 1.0F, 0.0F, 1.0F).des("Base Pattern Shadow Radius").whenTrue(this.baseRectPatternShadow).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 386 */     this.baseRectPatternShadowY = setting("BPatternShadowY", 1.2F, -5.0F, 5.0F).des("Base Pattern Shadow Y Adjust").whenTrue(this.baseRectPatternShadow).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 387 */     this.baseRectPatternShadowAlpha = setting("BPatternShadowAlpha", 75, 0, 255).des("Base Pattern Shadow Alpha").whenTrue(this.baseRectPatternShadow).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 388 */     this.baseRectPatternShadowWidth = setting("BPatternShadowWidth", 36.6F, 0.0F, 100.0F).des("Base Pattern Shadow Width").whenTrue(this.baseRectPatternShadow).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 389 */     this.baseRectPatternShadowHeight = setting("BPatternShadowHeight", 9.7F, 0.0F, 20.0F).des("Base Pattern Shadow Height").whenTrue(this.baseRectPatternShadow).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 390 */     this.baseRectPatternOutline = setting("BPatternOutline", false).des("Base Pattern Shapes Outline").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 391 */     this.baseRectPatternOutlineWidth = setting("BPatternOutlineWidth", 0.4F, 0.0F, 1.0F).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.baseRectPatternOutline).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 392 */     this.baseRectPatternOutlineBrightnessRoll = setting("BRPOutlineBrightRoll", false).des("Base Pattern Outline Rolling Brightness").whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 393 */     this.baseRectPatternOutlineBrightnessRollDirection = setting("BRPOBrightRollDirection", BaseRectPatternOutlineBrightnessRollDirection.Right).des("Base Pattern Outline Rolling Brightness Direction").whenTrue(this.baseRectPatternOutlineBrightnessRoll).whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 394 */     this.baseRectPatternOutlineBrightnessRollSpeed = setting("BRPOBrightRollSpeed", 1.6F, 0.0F, 3.0F).des("Base Pattern Outline Rolling Brightness Speed").whenTrue(this.baseRectPatternOutlineBrightnessRoll).whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 395 */     this.baseRectPatternOutlineBrightnessRollMaxBright = setting("BRPOBrightRollMax", 0.0F, 0.0F, 1.0F).des("Base Pattern Outline Rolling Brightness Max Brightness").whenTrue(this.baseRectPatternOutlineBrightnessRoll).whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 396 */     this.baseRectPatternOutlineBrightnessRollMinBright = setting("BRPOBrightRollMin", 0.5F, 0.0F, 1.0F).des("Base Pattern Outline Rolling Brightness Min Brightness").whenTrue(this.baseRectPatternOutlineBrightnessRoll).whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 397 */     this.baseRectPatternOutlineBrightnessRollLength = setting("BRPOBrightRollLength", 21.3F, 0.1F, 50.0F).des("Base Pattern Outline Rolling Brightness Length").whenTrue(this.baseRectPatternOutlineBrightnessRoll).whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 398 */     this.baseRectPatternOutlineColor = setting("BRPOutlineColor", new Color((new Color(0, 0, 0, 78)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 78)).des("Base Pattern Outline Color").whenTrue(this.baseRectPatternOutline).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 399 */     this.baseRectPatternBrightnessRoll = setting("BRPatternBrightRoll", true).des("Base Pattern Rolling Brightness").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 400 */     this.baseRectPatternBrightnessRollDirection = setting("BRPBrightRollDirection", BaseRectPatternBrightnessRollDirection.Left).des("Base Pattern Rolling Brightness Direction").whenTrue(this.baseRectPatternBrightnessRoll).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 401 */     this.baseRectPatternBrightnessRollSpeed = setting("BRPBrightRollFactor", 1.5F, 0.0F, 15.0F).des("Base Pattern Rolling Brightness Speed").whenTrue(this.baseRectPatternBrightnessRoll).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 402 */     this.baseRectPatternBrightnessRollMaxBright = setting("BRPBrightRollMax", 1.0F, 0.0F, 1.0F).des("Base Pattern Rolling Brightness Max Brightness").whenTrue(this.baseRectPatternBrightnessRoll).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 403 */     this.baseRectPatternBrightnessRollMinBright = setting("BRPBrightRollMin", 0.2F, 0.0F, 1.0F).des("Base Pattern Rolling Brightness Min Brightness").whenTrue(this.baseRectPatternBrightnessRoll).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 404 */     this.baseRectPatternBrightnessRollLength = setting("BRPBrightRollSize", 0.4F, 0.0F, 1.0F).des("Base Pattern Rolling Brightness Length").whenTrue(this.baseRectPatternBrightnessRoll).only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 405 */     this.baseRectPatternColor = setting("BRPatternColor", new Color((new Color(154, 154, 154, 116)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 154, 154, 154, 116)).des("Base Pattern Shape Color").only(v -> (this.baseRectPattern.getValue() != BaseRectPattern.None)).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/*     */     
/* 407 */     this.guiCategoryBaseRound = setting("BaseRoundedRect", true).des("Draw Rounded Rectangle At The Bottom Of Categories").whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 408 */     this.radiusBase = setting("BaseCornerRad", 0.6F, 0.0F, 1.0F).des("Radius Of Rounded Base Rect Corners").whenTrue(this.guiCategoryBaseRound).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 409 */     this.arcTopRightBase = setting("TRightRoundBase", true).des("Base Rect Round Top Right Corner").whenTrue(this.guiCategoryBaseRound).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 410 */     this.arcTopLeftBase = setting("TLeftRoundBase", true).des("Base Rect Round Top Left Corner").whenTrue(this.guiCategoryBaseRound).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 411 */     this.arcDownRightBase = setting("DRightRoundBase", true).des("Base Rect Round Bottom Right Corner").whenTrue(this.guiCategoryBaseRound).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 412 */     this.arcDownLeftBase = setting("DLeftRoundBase", true).des("Base Rect Round Bottom Left Corner").whenTrue(this.guiCategoryBaseRound).whenTrue(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/*     */     
/* 414 */     this.guiCategoryPanelFadeDownExtend = setting("PanelExtendFade", false).des("Draw Fade At Bottom Of Panels").whenFalse(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 415 */     this.panelFadeDownExtendOutline = setting("PExtendFadeOutline", true).des("Panel Bottom Extend Outline").whenTrue(this.guiCategoryPanelFadeDownExtend).whenFalse(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/* 416 */     this.panelFadeDownExtendHeight = setting("PExtendFadeHeight", 17.8F, 0.0F, 50.0F).des("Panel Bottom Extend Fade Height").whenTrue(this.guiCategoryPanelFadeDownExtend).whenFalse(this.guiCategoryBase).whenAtMode(this.page, Page.Outline);
/*     */     
/* 418 */     this.outline = setting("Outline", true).des("Outline Around Panels").whenAtMode(this.page, Page.Outline);
/* 419 */     this.outlineDownToggle = setting("OutlineDownToggle", false).des("Don't Draw Bottom Outline Line").whenTrue(this.outline).whenAtMode(this.page, Page.Outline);
/* 420 */     this.outlineWidth = setting("OutlineWidth", 1.1F, 0.0F, 4.0F).des("Width Of GUI Outline").whenTrue(this.outline).whenAtMode(this.page, Page.Outline);
/* 421 */     this.outlineColorGradient = setting("OutlineGradient", true).des("Outline Gradient Color").whenTrue(this.outline).whenAtMode(this.page, Page.Outline);
/* 422 */     this.outlineColor = setting("OutlineColor", new Color((new Color(100, 61, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 100, 61, 255, 255)).des("Outline Color").whenTrue(this.outline).whenFalse(this.outlineColorGradient).whenAtMode(this.page, Page.Outline);
/*     */     
/* 424 */     this.outlineTopColor = setting("OutlineTopColor", new Color((new Color(68, 0, 164, 126)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 68, 0, 164, 126)).des("Outline Top Color").whenTrue(this.outline).whenTrue(this.outlineColorGradient).whenAtMode(this.page, Page.Outline);
/* 425 */     this.outlineDownColor = setting("OutlineDownColor", new Color((new Color(68, 0, 179, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 68, 0, 179, 255)).des("Outline Down Color").whenTrue(this.outline).whenTrue(this.outlineColorGradient).whenAtMode(this.page, Page.Outline);
/*     */     
/* 427 */     this.backgroundColor = setting("BGColorTint", true).des("Background color tint effect").whenAtMode(this.page, Page.Background);
/*     */     
/* 429 */     this.gradient = setting("ColorGradient", true).des("Background Color Gradient").whenTrue(this.backgroundColor).whenAtMode(this.page, Page.Background);
/* 430 */     this.trColor = setting("TopRightColor", new Color((new Color(0, 0, 0, 0)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 0)).des("Top Right Color").whenTrue(this.backgroundColor).whenTrue(this.gradient).whenAtMode(this.page, Page.Background);
/* 431 */     this.tlColor = setting("TopLeftColor", new Color((new Color(0, 0, 0, 0)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 0)).des("Top Left Color").whenTrue(this.backgroundColor).whenTrue(this.gradient).whenAtMode(this.page, Page.Background);
/* 432 */     this.brColor = setting("BottomRightColor", new Color((new Color(0, 0, 0, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 255)).des("Bottom Right Color").whenTrue(this.backgroundColor).whenTrue(this.gradient).whenAtMode(this.page, Page.Background);
/* 433 */     this.blColor = setting("BottomLeftColor", new Color((new Color(0, 0, 0, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 255)).des("Bottom Left Color").whenTrue(this.backgroundColor).whenTrue(this.gradient).whenAtMode(this.page, Page.Background);
/* 434 */     this.bgColor = setting("BGColor", new Color((new Color(0, 0, 0, 100)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 100)).des("BG Color").whenTrue(this.backgroundColor).whenFalse(this.gradient).whenAtMode(this.page, Page.Background);
/*     */     
/* 436 */     this.settingsPage = setting("SettingsPage", SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 438 */     this.booleanFullRect = setting("BooleanFullRect", false).des("Boolean Full Rect").whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 439 */     this.booleanFullRectSmooth = setting("BFullRectSmooth", true).des("Boolean Full Rect Animation").whenTrue(this.booleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 440 */     this.booleanFullRectSmoothFactor = setting("BFullRectSpeed", 1.0F, 0.4F, 10.0F).des("Boolean Full Rect Animation Speed").whenTrue(this.booleanFullRectSmooth).whenTrue(this.booleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 441 */     this.booleanFullRectSmoothAlpha = setting("BFullRectSmoothAlpha", true).des("Boolean Full Rect Alpha Animation").whenTrue(this.booleanFullRectSmooth).whenTrue(this.booleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 442 */     this.booleanFullRectScaleType = setting("BFullRectSmoothScale", BooleanFullRectScaleType.All).des("Boolean Full Rect Scale Animation Type").whenTrue(this.booleanFullRectSmooth).whenTrue(this.booleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 443 */     this.booleanFullRectColor = setting("BFullRectColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Boolean Full Rect Color").whenTrue(this.booleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/*     */     
/* 445 */     this.booleanSwitchType = setting("BooleanSwitchType", BooleanSwitchTypes.SliderRound).des("Boolean Switch Types").whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 446 */     this.booleanSwitchLineWidth = setting("BSwitchLineWidth", 1.0F, 1.0F, 2.0F).des("Boolean Switch Outline Width").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 447 */     this.booleanSwitchX = setting("BooleanSwitchX", 6.0F, -20.0F, 20.0F).des("Boolean Switch X Offset").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 448 */     this.booleanSwitchScale = setting("BSwitchScale", 0.7F, 0.1F, 2.0F).des("Boolean Switch Scale").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 449 */     this.booleanDotFillAmount = setting("BDotFillAmount", 0.5F, 0.0F, 1.0F).des("Boolean Dot Fill Amount").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 450 */     this.booleanSmooth = setting("BooleanSmooth", true).des("Boolean Animation").only(v -> ((this.booleanSwitchType.getValue() == BooleanSwitchTypes.SliderRound || this.booleanSwitchType.getValue() == BooleanSwitchTypes.SliderNonRound) && this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 451 */     this.booleanSmoothFactor = setting("BooleanSmoothSpeed", 6.6F, 0.4F, 10.0F).des("Boolean Animation Speed").whenTrue(this.booleanSmooth).only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 452 */     this.booleanDotMode = setting("BDotSmoothMode", BooleanDotMode.Both).des("Boolean Dot Animation Mode").only(v -> (this.booleanSwitchType.getValue() == BooleanSwitchTypes.Square || this.booleanSwitchType.getValue() == BooleanSwitchTypes.Circle)).whenTrue(this.booleanSmooth).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 453 */     this.booleanSwitchColorChange = setting("BooleanColorChange", true).des("Boolean Color Change On Enable").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/*     */     
/* 455 */     this.booleanDisabledColor = setting("BDisabledColor", new Color((new Color(31, 0, 98, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 31, 0, 98, 255)).des("Boolean Disabled Color").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenTrue(this.booleanSwitchColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 456 */     this.booleanEnabledColor = setting("BEnabledColor", new Color((new Color(105, 45, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 105, 45, 255, 255)).des("Boolean Enabled Color").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenTrue(this.booleanSwitchColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 457 */     this.booleanColor = setting("BooleanColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des(" Boolean Color").only(v -> (this.booleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenFalse(this.booleanSwitchColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/*     */     
/* 459 */     this.booleanTextColorChange = setting("BooleanTextColorChange", true).des("Boolean Text Color Change").whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 460 */     this.booleanTextColorSmooth = setting("BooleanTextColorSmooth", true).des("Boolean Text Color Change Animation").whenTrue(this.booleanTextColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 461 */     this.booleanTextColorSmoothFactor = setting("BTextColorSmoothFactor", 3.4F, 0.4F, 10.0F).des("Boolean Text Color Change Animation Speed").whenTrue(this.booleanTextColorSmooth).whenTrue(this.booleanTextColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 462 */     this.booleanTextColorEnabledColor = setting("BEnabledTextColor", new Color((new Color(113, 79, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 113, 79, 255, 255)).des("Boolean Enabled Text Color").whenTrue(this.booleanTextColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/* 463 */     this.booleanTextColorDisabledColor = setting("BDisabledTextColor", new Color((new Color(64, 64, 64, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 64, 64, 64, 255)).des("Boolean Disabled Text Color").whenTrue(this.booleanTextColorChange).whenAtMode(this.settingsPage, SettingsPage.Boolean).whenAtMode(this.page, Page.Settings);
/*     */     
/* 465 */     this.numSliderThinMode = setting("NumSliderThinMode", true).des("Number Slider Thin Mode").whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 466 */     this.numSliderThinModeTextOffset = setting("NumSliderThinTextOffset", 2.5F, 0.0F, 8.0F).des("Number Slider Thin Text Y Offset").whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 467 */     this.numSliderThinModeBarThickness = setting("NSliderThinBarThick", 1.2F, 0.0F, 5.0F).des("Num Slider Thin Thickness").whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 468 */     this.numSliderThinModeRounded = setting("NSliderThinRounded", true).des("Number Slider Thin Mode Rounded").whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 469 */     this.numSliderThinModeRoundedRadius = setting("NSliderThinRadius", 1.0F, 0.0F, 1.0F).des("Number Slider Thin Mode Rounded Corners Radius").whenTrue(this.numSliderThinModeRounded).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 470 */     this.numSliderThinModeSliderButton = setting("NSliderButton", true).des("Number Slider Thin Mode Header Button").whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 471 */     this.numSliderThinModeSliderButtonRounded = setting("NSliderButtonRounded", true).des("Number Slider Thin Mode Header Button Rounded Corner").whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 472 */     this.numSliderThinModeSliderButtonRoundedRadius = setting("NSliderButtonRadius", 0.7F, 0.0F, 1.0F).des("Number Slider Thin Mode Header Button Rounded Corner Size").whenTrue(this.numSliderThinModeSliderButtonRounded).whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 473 */     this.numSliderThinModeSliderButtonWidth = setting("NSliderButtonWidth", 6.0F, 0.0F, 15.0F).des("Number Slider Thin Mode Header Button Width").whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 474 */     this.numSliderThinModeSliderButtonHeight = setting("NSliderButtonHeight", 4.0F, 0.0F, 10.0F).des("Number Slider Thin Mode Header Button Height").whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 475 */     this.numSliderThinModeSliderButtonShadow = setting("NSliderButtonShadow", true).des("Number Slider Thin Mode Header Button Shadow").whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 476 */     this.numSliderThinModeSliderButtonShadowSize = setting("NSliderButtonShadowSize", 0.5F, 0.0F, 1.0F).des("Number Slider Thin Mode Header Button Shadow Size").whenTrue(this.numSliderThinModeSliderButtonShadow).whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 477 */     this.numSliderThinModeSliderButtonShadowAlpha = setting("NSliderButtonShadowAlpha", 139, 0, 255).des("Number Slider Thin Mode Header Button Shadow Alpha").whenTrue(this.numSliderThinModeSliderButtonShadow).whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 478 */     this.numSliderThinModeSliderButtonShadowAlphaFadeOut = setting("NSliderButtonShadowFade", true).des("Number Slider Thin Mode Header Button Fade Shadow At Start Of Bar").whenTrue(this.numSliderThinModeSliderButtonShadow).whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 479 */     this.numSliderThinModeSliderButtonShadowAlphaFadeOutThreshold = setting("NSButtonShadowFadePoint", 0.2F, 0.0F, 0.5F).des("Number Slider Thin Mode Header Button Fade Shadow Threshold").whenTrue(this.numSliderThinModeSliderButtonShadowAlphaFadeOut).whenTrue(this.numSliderThinModeSliderButtonShadow).whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 480 */     this.numSliderThinModeSliderButtonColor = setting("NSliderButtonColor", new Color((new Color(113, 113, 113, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 113, 113, 113, 255)).des("Number Slider Thin Mode Header Button Color").whenTrue(this.numSliderThinModeSliderButton).whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/*     */     
/* 482 */     this.numSliderThinModeUnSlidedColor = setting("NumThinUnSlidedColor", new Color((new Color(40, 40, 40, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 40, 40, 40, 255)).des("Number Slider Thin Mode UnSlided Area Color").whenTrue(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/*     */     
/* 484 */     this.numSliderTextColor = setting("NSliderTextColor", new Color((new Color(204, 204, 204, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 204, 204, 204, 255)).des("Number Slider Text Color").whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 485 */     this.numSliderDisplayValueTextColor = setting("NSValueTextColor", new Color((new Color(122, 122, 122, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 122, 122, 122, 255)).des("Number Slider Display Value Text Color").whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/*     */     
/* 487 */     this.numSliderGradient = setting("NumSliderFade", true).des("Number Slider Gradient").whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 488 */     this.numSliderValueLock = setting("NSliderValueLock", false).des("Number Slider Display Value Pos Lock").whenFalse(this.numSliderThinMode).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/*     */     
/* 490 */     this.numSliderLeftColor = setting("NSliderLeftColor", new Color((new Color(93, 26, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 93, 26, 255, 255)).des("Number Slider Left Color").whenTrue(this.numSliderGradient).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/* 491 */     this.numSliderRightColor = setting("NSliderRightColor", new Color((new Color(79, 0, 199, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 79, 0, 199, 255)).des("Number Slider Right Color").whenTrue(this.numSliderGradient).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/*     */     
/* 493 */     this.numSliderColor = setting("NumSliderColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Number Slider Color").whenFalse(this.numSliderGradient).whenAtMode(this.settingsPage, SettingsPage.Slider).whenAtMode(this.page, Page.Settings);
/*     */     
/* 495 */     this.bindButtonFancy = setting("BindButtonFancy", true).des("Bind Button Fancy Mode").whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 496 */     this.bindButtonFancyRounded = setting("BindButtonRounded", true).des("Bind Button Fancy Mode Rounded").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 497 */     this.bindButtonFancyRoundedRadius = setting("BButtonRoundedRadius", 0.6F, 0.0F, 1.0F).des("Bind Button Fancy Mode Rounded Corners Size").whenTrue(this.bindButtonFancyRounded).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 498 */     this.bindButtonFancyOutline = setting("BindButtonOutline", true).des("Bind Button Fancy Mode Offsetted Outline").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 499 */     this.bindButtonFancyOutlineOffset = setting("BButtonOutlineOffset", 2.0F, 0.0F, 5.0F).des("Bind Button Fancy Mode Outline Offset").whenTrue(this.bindButtonFancyOutline).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 500 */     this.bindButtonFancyOutlineWidth = setting("BButtonOutlineWidth", 1.2F, 1.0F, 2.0F).des("Bind Button Fancy Mode Outline Width").whenTrue(this.bindButtonFancyOutline).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 501 */     this.bindButtonFancyWaitingDots = setting("BButtonWaitDots", true).des("Bind Button Fancy Mode Waiting For Input Dots").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 502 */     this.bindButtonFancyWaitingDotsRadius = setting("BButtonWaitDotsSize", 0.6F, 0.0F, 3.0F).des("Bind Button Fancy Mode Waiting For Input Dots Size").whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 503 */     this.bindButtonFancyWaitingDotsGap = setting("BButtonWaitDotsGap", 1.0F, 0.0F, 3.0F).des("Bind Button Fancy Mode Waiting For Input Dots Gap").whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 504 */     this.bindButtonFancyWaitingDotsColor = setting("BButtonWaitDotsColor", new Color((new Color(129, 129, 129, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 129, 129, 129, 255)).des("Bind Button Fancy Mode Waiting For Input Dots Color").whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/*     */     
/* 506 */     this.bindButtonFancyWaitingRect = setting("BButtonWaitRect", true).des("Bind Button Fancy Mode Waiting For Input Colored Rect").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 507 */     this.bindButtonFancyWaitingRectColor = setting("BButtonWaitRectColor", new Color((new Color(98, 98, 98, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 98, 98, 98, 255)).des("Bind Button Fancy Mode Waiting For Input Colored Rect Color").whenTrue(this.bindButtonFancyWaitingRect).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/*     */     
/* 509 */     this.bindButtonFancyWaitingAnimate = setting("BButtonWaitAnimate", true).des("Bind Button Fancy Mode Waiting For Input Animation").only(v -> (((Boolean)this.bindButtonFancyWaitingDots.getValue()).booleanValue() || ((Boolean)this.bindButtonFancyWaitingRect.getValue()).booleanValue())).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 510 */     this.bindButtonFancyWaitingAnimateFactor = setting("BButtonWaitAnimateSpeed", 5.6F, 0.4F, 10.0F).des("Bind Button Fancy Mode Waiting For Input Animation Speed").whenTrue(this.bindButtonFancyWaitingAnimate).only(v -> (((Boolean)this.bindButtonFancyWaitingDots.getValue()).booleanValue() || ((Boolean)this.bindButtonFancyWaitingRect.getValue()).booleanValue())).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 511 */     this.bindButtonFancyWaitingDotsRollingBrightnessAnimate = setting("BBWaitDotsRollBright", true).des("Bind Button Fancy Mode Waiting For Input Dots Rolling Brightness Animation").whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 512 */     this.bindButtonFancyWaitingDotsRollingBrightnessRollDirection = setting("BBWaitDotsRollDirection", BindButtonWaitingDotsRolledBrightnessDirection.Right).des("Bind Button Fancy Mode Waiting For Input Dots Animate Direction").whenTrue(this.bindButtonFancyWaitingDotsRollingBrightnessAnimate).whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 513 */     this.bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateFactor = setting("BButtonWaitDotsFactor", 1.6F, 0.0F, 15.0F).des("Bind Button Fancy Mode Waiting For Input Dots Animate Speed").whenTrue(this.bindButtonFancyWaitingDotsRollingBrightnessAnimate).whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 514 */     this.bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateMaxBright = setting("BButtonWaitDotsMax", 0.8F, 0.0F, 1.0F).des("Bind Button Fancy Mode Waiting For Input Dots Animate Max Brightness").whenTrue(this.bindButtonFancyWaitingDotsRollingBrightnessAnimate).whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 515 */     this.bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateMinBright = setting("BButtonWaitDotsMin", 0.4F, 0.0F, 1.0F).des("Bind Button Fancy Mode Waiting For Input Dots Animate Min Brightness").whenTrue(this.bindButtonFancyWaitingDotsRollingBrightnessAnimate).whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 516 */     this.bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateRollLength = setting("BButtonWaitDotsRollSize", 0.3F, 0.0F, 1.0F).des("Bind Button Fancy Mode Waiting For Input Dots Animate Rolling Brightness Length").whenTrue(this.bindButtonFancyWaitingDotsRollingBrightnessAnimate).whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingDots).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 517 */     this.bindButtonColoredRectAnimateMode = setting("BBWaitRectAnimateMode", BindButtonColoredRectAnimateMode.Both).des("Bind Button Fancy Mode Waiting For Input Colored Rect Animate Mode").whenTrue(this.bindButtonFancyWaitingAnimate).whenTrue(this.bindButtonFancyWaitingRect).whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/*     */     
/* 519 */     this.bindButtonKeyColor = setting("BButtonKeyColor", new Color((new Color(199, 199, 199, 218)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 199, 199, 199, 218)).des("Bind Button Key Color").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/*     */     
/* 521 */     this.bindButtonKeyStrFont = setting("BButtonKeyStrFont", KeyBindFancyFont.Objectivity).des("Bind Button Key String Font").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 522 */     this.bindButtonKeyStrX = setting("BButtonKeyStrX", 0.7F, -20.0F, 20.0F).des("Bind Button Key String X").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 523 */     this.bindButtonKeyStrY = setting("BButtonKeyStrY", -0.3F, -20.0F, 20.0F).des("Bind Button Key String Y").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 524 */     this.bindButtonKeyStrScale = setting("BButtonKeyStrScale", 0.6F, 0.1F, 1.5F).des("Bind Button Key String Scale").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 525 */     this.bindButtonKeyStringColor = setting("BButtonKeyStrColor", new Color((new Color(55, 55, 55, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 55, 55, 55, 255)).des("Bind Button Key String Color").whenTrue(this.bindButtonFancy).whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/* 526 */     this.bindButtonTextColor = setting("BButtonTextColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Bind Button Text Color").whenAtMode(this.settingsPage, SettingsPage.Bind).whenAtMode(this.page, Page.Settings);
/*     */     
/* 528 */     this.visibilitySettingMode = setting("VisibilitySettingMode", VisibilitySettingMode.Symbol).des("Visibility Setting Mode").whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 530 */     this.visibilityVisibleTextColor = setting("VVisibleTextColor", new Color((new Color(115, 115, 115, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 115, 115, 115, 255)).des("Visibility 'Visible' Text Color").whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 532 */     this.visibilityTextColor = setting("VisibilityTextColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Visibility Text Color").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Text).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 534 */     this.visibilityBooleanFullRect = setting("VBooleanFullRect", false).des("Visibility Boolean Full Rect").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 535 */     this.visibilityBooleanFullRectSmooth = setting("VBFullRectSmooth", true).des("Visibility Boolean Full Rect Animation").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenTrue(this.visibilityBooleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 536 */     this.visibilityBooleanFullRectSmoothFactor = setting("VBFullRectSpeed", 1.0F, 0.4F, 10.0F).des("Visibility Boolean Full Rect Animation Speed").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenTrue(this.visibilityBooleanFullRectSmooth).whenTrue(this.visibilityBooleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 537 */     this.visibilityBooleanFullRectSmoothAlpha = setting("VBFullRectSmoothAlpha", true).des("Visibility Boolean Full Rect Alpha Animation").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenTrue(this.visibilityBooleanFullRectSmooth).whenTrue(this.visibilityBooleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 538 */     this.visibilityBooleanFullRectScaleType = setting("VBFullRectSmoothScale", BooleanFullRectScaleType.All).des("Visibility Boolean Full Rect Scale Animation Type").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenTrue(this.visibilityBooleanFullRectSmooth).whenTrue(this.visibilityBooleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 539 */     this.visibilityBooleanFullRectColor = setting("VBFullRectColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Visibility Boolean Full Rect Color").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenTrue(this.visibilityBooleanFullRect).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 541 */     this.visibilityBooleanSwitchType = setting("VBooleanSwitchType", BooleanSwitchTypes.SliderRound).des("Visibility Boolean Switch Types").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 542 */     this.visibilityBooleanSwitchLineWidth = setting("VBSwitchLineWidth", 1.0F, 1.0F, 2.0F).des("Visibility Boolean Switch Outline Width").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 543 */     this.visibilityBooleanSwitchX = setting("VBooleanSwitchX", 0.0F, -20.0F, 20.0F).des("Visibility Boolean Switch X Offset").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 544 */     this.visibilityBooleanSwitchScale = setting("VBSwitchScale", 1.0F, 0.1F, 2.0F).des("Visibility Boolean Switch Scale").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 545 */     this.visibilityBooleanDotFillAmount = setting("VBDotFillAmount", 0.5F, 0.0F, 1.0F).des("Visibility Boolean Dot Fill Amount").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 546 */     this.visibilityBooleanSmooth = setting("VBooleanSmooth", true).des("Visibility Boolean Animation").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> ((this.visibilityBooleanSwitchType.getValue() == BooleanSwitchTypes.SliderRound || this.visibilityBooleanSwitchType.getValue() == BooleanSwitchTypes.SliderNonRound) && this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 547 */     this.visibilityBooleanSmoothFactor = setting("VBooleanSmoothSpeed", 1.0F, 0.4F, 10.0F).des("Visibility Boolean Animation Speed").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).whenTrue(this.visibilityBooleanSmooth).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 548 */     this.visibilityBooleanDotMode = setting("VBDotSmoothMode", BooleanDotMode.Both).des("Visibility Boolean Dot Animation Mode").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() == BooleanSwitchTypes.Square || this.visibilityBooleanSwitchType.getValue() == BooleanSwitchTypes.Circle)).whenTrue(this.visibilityBooleanSmooth).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 549 */     this.visibilityBooleanSwitchColorChange = setting("VBooleanColorChange", true).des("Visibility Boolean Color Change On Enable").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 551 */     this.visibilityBooleanDisabledColor = setting("VBDisabledColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Visibility Boolean Disabled Color").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenTrue(this.visibilityBooleanSwitchColorChange).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 552 */     this.visibilityBooleanEnabledColor = setting("VBEnabledColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Visibility Boolean Enabled Color").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenTrue(this.visibilityBooleanSwitchColorChange).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 554 */     this.visibilityBooleanColor = setting("VBooleanColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Visibility Boolean Color").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Boolean).only(v -> (this.visibilityBooleanSwitchType.getValue() != BooleanSwitchTypes.None)).whenFalse(this.visibilityBooleanSwitchColorChange).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 556 */     this.visibilityIconYOffset = setting("VisibilityIconY", 0, -15, 15).des("Visibility Icon Y Offset").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 557 */     this.visibilityIconScale = setting("VisibilityIconScale", 1.0F, 0.1F, 2.0F).des("Visibility Icon Scale").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 558 */     this.visibilityIconColor = setting("VisibilityIconColor", new Color((new Color(255, 255, 255, 81)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 81)).des("Visibility Icon Color").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 560 */     this.visibilityIconGlow = setting("VisibilityIconGlow", true).des("Visibility Icon Glow").whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 561 */     this.visibilityIconGlowToggle = setting("VIconGlowToggle", true).des("Visibility Icon Glow Toggle When Visibility Is Off").whenTrue(this.visibilityIconGlow).whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 562 */     this.visibilityIconGlowX = setting("VisibilityIconGlowX", 0.0F, -10.0F, 10.0F).des("Visibility Icon Glow X Offset").whenTrue(this.visibilityIconGlow).whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 563 */     this.visibilityIconGlowY = setting("VisibilityIconGlowY", -0.9F, -10.0F, 10.0F).des("Visibility Icon Glow Y Offset").whenTrue(this.visibilityIconGlow).whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 564 */     this.visibilityIconGlowSize = setting("VisibilityIconGlowSize", 12.0F, 0.0F, 15.0F).des("Visibility Icon Glow Size").whenTrue(this.visibilityIconGlow).whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/* 565 */     this.visibilityIconGlowColor = setting("VIconGlowColor", new Color((new Color(255, 255, 255, 76)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 76)).des("Visibility Icon Glow Color").whenTrue(this.visibilityIconGlow).whenAtMode(this.visibilitySettingMode, VisibilitySettingMode.Symbol).whenAtMode(this.settingsPage, SettingsPage.Visibility).whenAtMode(this.page, Page.Settings);
/*     */     
/* 567 */     this.enumDropMenu = setting("EnumDropMenu", true).des("Enum Dropdown Menu").whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 568 */     this.enumNameColor = setting("EnumNameColor", new Color((new Color(192, 192, 192, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 192, 192, 192, 255)).des("Enum Name Color").whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 569 */     this.enumLoopModeTextXOffset = setting("EnumTextX", 12, -10, 50).des("Enum Display Text X Offset").whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 570 */     this.enumDisplayTextColor = setting("EDisplayTextColor", new Color((new Color(115, 115, 115, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 115, 115, 115, 255)).des("Enum Display Text Color").whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 572 */     this.enumDropMenuPage = setting("EnumDropMenuPage", EnumDropMenuPage.Base).whenTrue(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 574 */     this.enumDropMenuIcon = setting("EnumIcon", true).des("Enum Dropdown Menu Icon").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 575 */     this.enumDropMenuIconXOffset = setting("EnumIconX", 0, -10, 30).des("Enum Dropdown Menu Icon X Offset").whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 576 */     this.enumDropMenuIconScale = setting("EnumIconScale", 0.8F, 0.1F, 2.0F).des("Enum Dropdown Menu Icon Scale").whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 577 */     this.enumDropMenuIconColor = setting("EnumIconColor", new Color((new Color(255, 255, 255, 36)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 36)).des("Enum Dropdown Menu Icon Color").whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 578 */     this.enumDropMenuIconExpandedChange = setting("EIconExpandedChange", true).des("Enum Dropdown Menu Icon Change When Expanded").whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 579 */     this.enumDropMenuIconExpandedChangeAnimation = setting("EIconExpandAnimate", true).des("Enum Dropdown Menu Icon Expanded Change Animation").whenTrue(this.enumDropMenuIconExpandedChange).whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 580 */     this.enumDropMenuIconExpandedChangeAnimationSpeed = setting("EIconExpandAnimateSpeed", 3.5F, 0.4F, 10.0F).des("Enum Dropdown Menu Icon Expanded Change Animation Speed").whenTrue(this.enumDropMenuIconExpandedChange).whenTrue(this.enumDropMenuIconExpandedChangeAnimation).whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 581 */     this.enumDropMenuIconExpandedGlow = setting("EIconExpandGlow", true).des("Enum Dropdown Menu Icon Expanded Glow").whenTrue(this.enumDropMenuIconExpandedChange).whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 582 */     this.enumDropMenuIconExpandedGlowSize = setting("EIconExpandGlowSize", 10.0F, 0.0F, 15.0F).des("Enum Dropdown Menu Icon Expanded Glow Size").whenTrue(this.enumDropMenuIconExpandedGlow).whenTrue(this.enumDropMenuIconExpandedChange).whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 583 */     this.enumDropMenuIconExpandedGlowAlpha = setting("EIconExpandGlowAlpha", 52, 0, 255).des("Enum Dropdown Menu Icon Expanded Glow Alpha").whenTrue(this.enumDropMenuIconExpandedGlow).whenTrue(this.enumDropMenuIconExpandedChange).whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 584 */     this.enumDropMenuIconExpandedChangedColor = setting("EIconExpandedColor", new Color((new Color(255, 255, 255, 64)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 64)).whenTrue(this.enumDropMenuIconExpandedChange).whenTrue(this.enumDropMenuIcon).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Icon).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 586 */     this.enumDropMenuExpandAnimate = setting("EMenuExpandAnimate", true).des("Enum Dropdown Menu Expand Toggle Animate").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 587 */     this.enumDropMenuExpandAnimateScale = setting("EMExpandAnimateScale", true).des("Enum Dropdown Menu Expand Toggle Animate Scale").whenTrue(this.enumDropMenuExpandAnimate).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 588 */     this.enumDropMenuExpandAnimateScaleSpeed = setting("EMExpandAnimateScaleSpeed", 4.2F, 0.4F, 10.0F).des("Enum Dropdown Menu Expand Toggle Animate Scale Speed").whenTrue(this.enumDropMenuExpandAnimateScale).whenTrue(this.enumDropMenuExpandAnimate).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 589 */     this.enumDropMenuExpandAnimateSpeed = setting("EMExpandAnimateSpeed", 4.2F, 0.4F, 10.0F).des("Enum Dropdown Menu Expand Toggle Animate Speed").whenTrue(this.enumDropMenuExpandAnimate).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 590 */     this.enumDropMenuXOffset = setting("EnumMenuX", 5, 0, 50).des("Enum Dropdown Menu X Offset").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 591 */     this.enumDropMenuWidthFactor = setting("EMenuWidthFactor", 10, 0, 40).des("Enum Dropdown Menu Width From Text").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 592 */     this.enumDropMenuTextScale = setting("EnumMenuTextScale", 0.8F, 0.1F, 2.0F).des("Enum Dropdown Menu Text Scale").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 593 */     this.enumDropMenuTextColor = setting("EMenuTextColor", new Color((new Color(62, 62, 62, 209)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 62, 62, 62, 209)).des("Enum Dropdown Menu Text Color").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 594 */     this.enumDropMenuSideBar = setting("EnumMenuSideBar", true).des("Enum Dropdown Menu Side Bar").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 595 */     this.enumDropMenuSideBarWidth = setting("EMenuSideBarWidth", 1.9F, 1.0F, 5.0F).des("Enum Dropdown Menu Side Bar Width").whenTrue(this.enumDropMenuSideBar).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 596 */     this.enumDropMenuOutline = setting("EnumMenuOutline", false).des("Enum Dropdown Menu Outline").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 597 */     this.enumDropMenuOutlineWidth = setting("EMenuOutlineWidth", 1.0F, 1.0F, 3.0F).des("Enum Dropdown Menu Outline Width").whenTrue(this.enumDropMenuOutline).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 598 */     this.enumDropMenuOutlineColor = setting("EMenuOutlineColor", new Color((new Color(98, 26, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 98, 26, 255, 255)).des("Enum Dropdown Menu Outline Color").only(v -> (((Boolean)this.enumDropMenuOutline.getValue()).booleanValue() || ((Boolean)this.enumDropMenuSideBar.getValue()).booleanValue())).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 599 */     this.enumDropMenuExtensions = setting("EnumMenuExtend", true).des("Enum Dropdown Menu Top Bottom Extensions").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 600 */     this.enumDropMenuExtensionsHeight = setting("EMenuExtendHeight", 6.0F, 0.0F, 15.0F).des("Enum Dropdown Menu Top Bottom Extensions Height").whenTrue(this.enumDropMenuExtensions).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 601 */     this.enumDropMenuRectGap = setting("EnumMenuRectGap", 0, -1, 15).des("Enum Dropdown Menu Rect Gaps").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 602 */     this.enumDropMenuRectColor = setting("EMenuRectColor", new Color((new Color(0, 0, 0, 64)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 64)).des("Enum Dropdown Menu Rect Color").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 603 */     this.enumDropMenuRectBGColor = setting("EMenuRectBGColor", new Color((new Color(0, 0, 0, 206)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 206)).des("Enum Dropdown Menu Rect BG Color").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 604 */     this.enumDropMenuSideGlow = setting("EnumMenuSideGlow", true).des("Enum Dropdown Menu Side Glow").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 605 */     this.enumDropMenuSideGlowWidth = setting("EMSideGlowWidth", 20.0F, 0.0F, 50.0F).des("Enum Dropdown Menu Side Glow").whenTrue(this.enumDropMenuSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 606 */     this.enumDropMenuSideGlowColor = setting("EMSideGlowColor", new Color((new Color(122, 43, 255, 101)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 122, 43, 255, 101)).des("Enum Dropdown Menu Side Glow Color").whenTrue(this.enumDropMenuSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 607 */     this.enumDropMenuTopBottomGradients = setting("EMenuEndFade", true).des("Enum Dropdown Menu Gradients At Top And Bottom").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 608 */     this.enumDropMenuTopBottomGradientsHeight = setting("EMEndFadeHeight", 15.5F, 0.0F, 30.0F).des("Enum Dropdown Menu Gradients At Top And Bottom Height").whenTrue(this.enumDropMenuTopBottomGradients).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 609 */     this.enumDropMenuTopBottomGradientsColor = setting("EMEndFadeColor", new Color((new Color(0, 0, 0, 178)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 178)).des("Enum Dropdown Menu Gradients At Top And Bottom Color").whenTrue(this.enumDropMenuTopBottomGradients).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 610 */     this.enumDropMenuOtherSideGlow = setting("EMSideGlow2", EnumDropMenuOtherSideGlowMode.Right).des("Enum Dropdown Menu Another Glow").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 611 */     this.enumDropMenuOtherSideGlowWidth = setting("EMSideGlow2Width", 15.0F, 0.0F, 50.0F).des("Enum Dropdown Menu Another Glow Width").only(v -> (this.enumDropMenuOtherSideGlow.getValue() != EnumDropMenuOtherSideGlowMode.None)).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 612 */     this.enumDropMenuOtherSideGlowColor = setting("EMSideGlow2Color", new Color((new Color(255, 255, 255, 31)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 31)).des("Enum Dropdown Menu Another Glow Color").only(v -> (this.enumDropMenuOtherSideGlow.getValue() != EnumDropMenuOtherSideGlowMode.None)).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 613 */     this.enumDropMenuShadow = setting("EnumMenuShadow", true).des("Enum Dropdown Menu Gradient Shadow").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 614 */     this.enumDropMenuShadowSize = setting("EMenuShadowSize", 0.2F, 0.0F, 1.0F).des("Enum Dropdown Menu Gradient Shadow Size").whenTrue(this.enumDropMenuShadow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 615 */     this.enumDropMenuShadowAlpha = setting("EMenuShadowAlpha", 151, 0, 255).des("Enum Dropdown Menu Gradient Shadow Alpha").whenTrue(this.enumDropMenuShadow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Base).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 617 */     this.enumDropMenuSelectedRectScaleOut = setting("EMSelectExpandRect", false).des("Enum Dropdown Menu Expand Out Rect On Select").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 618 */     this.enumDropMenuSelectedRectScaleOutFactor = setting("EMSelectExpandRectFactor", 1.0F, 0.4F, 10.0F).des("Enum Dropdown Menu Expand Out Rect On Select Speed").whenTrue(this.enumDropMenuSelectedRectScaleOut).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 619 */     this.enumDropMenuSelectedRectScaleMaxScale = setting("EMSelectExpandRectMax", 20.0F, 0.0F, 50.0F).des("Enum Dropdown Menu Expand Out Rect On Select Max Scale").whenTrue(this.enumDropMenuSelectedRectScaleOut).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 620 */     this.enumDropMenuSelectedRectScaleOutColor = setting("EMSelectExpandRColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Enum Dropdown Menu Expand Out Rect On Select Color").whenTrue(this.enumDropMenuSelectedRectScaleOut).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 621 */     this.enumDropMenuSelectedRect = setting("EMenuSelectRect", false).des("Enum Dropdown Menu Selected Rect").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 622 */     this.enumDropMenuSelectedRectRounded = setting("EMenuSelectRectRound", false).des("Enum Dropdown Menu Selected Rect Rounded Corners").whenTrue(this.enumDropMenuSelectedRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 623 */     this.enumDropMenuSelectedRectRoundedRadius = setting("EMenuSelectRectRadius", 0.5F, 0.0F, 1.0F).des("Enum Dropdown Menu Selected Rect Rounded Corners Radius").whenTrue(this.enumDropMenuSelectedRectRounded).whenTrue(this.enumDropMenuSelectedRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 624 */     this.enumDropMenuSelectedRectAnimation = setting("EMenuSelectRectAnimate", EnumDropMenuSelectedRectAnimation.Slide).des("Enum Dropdown Menu Selected Rect Animation").whenTrue(this.enumDropMenuSelectedRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 625 */     this.enumDropMenuSelectedRectAnimationSpeed = setting("EMSelectRectAnimateSpeed", 1.0F, 0.4F, 10.0F).des("Enum Dropdown Selected Rect Animation Speed").only(v -> (this.enumDropMenuSelectedRectAnimation.getValue() != EnumDropMenuSelectedRectAnimation.None)).whenTrue(this.enumDropMenuSelectedRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 626 */     this.enumDropMenuSelectedRectColor = setting("EMSelectRectColor", new Color((new Color(120, 40, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 40, 255, 255)).des("Enum Menu Selected Rect Color").whenTrue(this.enumDropMenuSelectedRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 627 */     this.enumDropMenuSelectedSideRect = setting("EMSelectSideRect", true).des("Enum Menu Selected Side Rect").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 628 */     this.enumDropMenuSelectedSideRectRounded = setting("EMSelectSideRectRound", true).des("Enum Menu Selected Side Rect Rounded Corners").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 629 */     this.enumDropMenuSelectedSideRectRoundedRadius = setting("EMSelectSideRectRadius", 1.0F, 0.0F, 1.0F).des("Enum Menu Selected Side Rect Rounded Corners Radius").whenTrue(this.enumDropMenuSelectedSideRectRounded).whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 630 */     this.enumDropMenuSelectedSideRectSide = setting("EMSelectSideRectSide", EnumDropMenuSelectedSideRectSide.Right).des("Enum Menu Selected Side Rect Side").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 631 */     this.enumDropMenuSelectSideRectFull = setting("EMSelectSideRAllRound", true).des("Enum Menu Selected Side Rect All Sides Rounded").whenTrue(this.enumDropMenuSelectedSideRectRounded).whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 632 */     this.enumDropMenuSelectedSideRectXOffset = setting("EMSelectSideRectX", 1.8F, -10.0F, 40.0F).des("Enum Menu Selected Side Rect X Offset").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 633 */     this.enumDropMenuSelectedSideRectWidth = setting("EMSelectSideRectWidth", 3.5F, 0.0F, 15.0F).des("Enum Menu Selected Side Rect Width").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 634 */     this.enumDropMenuSelectedSideRectHeight = setting("EMSelectSideRectHeight", 10.4F, 0.0F, 16.0F).des("Enum Menu Selected Side Rect Height").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 635 */     this.enumDropMenuSelectedSideRectAnimation = setting("EMSelectSideRAnimate", true).des("Enum Menu Select Side Rect Scale Animation").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 636 */     this.enumDropMenuSelectedSideRectAnimationSpeed = setting("EMSelectSideRAnimateSpeed", 3.4F, 0.4F, 10.0F).des("Enum Menu Select Side Rect Scale Animation Speed").whenTrue(this.enumDropMenuSelectedSideRectAnimation).whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 637 */     this.enumDropMenuSelectedSideRectColor = setting("EMSelectSideColor", new Color((new Color(93, 26, 255, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 93, 26, 255, 255)).des("Enum Menu Selected Side Rect Color").whenTrue(this.enumDropMenuSelectedSideRect).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 638 */     this.enumDropMenuSelectedSideGlow = setting("EMSelectSideGlow", true).des("Enum Menu Selected Side Glow").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 639 */     this.enumDropMenuSelectedSideGlowSide = setting("EMSelectSideGlowSide", EnumDropMenuSelectedSideGlowSide.Right).des("Enum Menu Select Side Glow Side").whenTrue(this.enumDropMenuSelectedSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 640 */     this.enumDropMenuSelectedSideGlowWidth = setting("EMSelectSideGlowWidth", 18.4F, 0.0F, 50.0F).des("Enum Menu Select Side Glow Width").whenTrue(this.enumDropMenuSelectedSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 641 */     this.enumDropMenuSelectedSideGlowAnimate = setting("EMSelectSideGlowAnimate", true).des("Enum Menu Select Side Glow Animate").whenTrue(this.enumDropMenuSelectedSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 642 */     this.enumDropMenuSelectedSideGlowAnimateSpeed = setting("EMSelectSideGAnimateFactor", 1.0F, 0.4F, 10.0F).des("Enum Menu Select Side Glow Animate Speed").whenTrue(this.enumDropMenuSelectedSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 643 */     this.enumDropMenuSelectedSideGlowColor = setting("EMSelectSideFadeColor", new Color((new Color(96, 26, 255, 129)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 96, 26, 255, 129)).des("Enum Menu Selected Side Glow Color").whenTrue(this.enumDropMenuSelectedSideGlowAnimate).whenTrue(this.enumDropMenuSelectedSideGlow).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 644 */     this.enumDropMenuSelectedTextDifColor = setting("EMSelectTextDifColor", true).des("Enum Menu Selected Text Color Change").whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 645 */     this.enumDropMenuSelectedTextColorAnimation = setting("EMSelectTextColorAnimate", true).des("Enum Menu Selected Text Color Change Animation").whenTrue(this.enumDropMenuSelectedTextDifColor).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 646 */     this.enumDropMenuSelectedTextColorAnimationSpeed = setting("EMSelectTextColorAnimateSpeed", 2.7F, 0.4F, 10.0F).des("Enum Menu Selected Text Color Change Animation Speed").whenTrue(this.enumDropMenuSelectedTextDifColor).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 647 */     this.enumDropMenuSelectedTextColor = setting("EMSelectTextColor", new Color((new Color(255, 255, 255, 206)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 206)).des("Enum Menu Selected Text Color").whenTrue(this.enumDropMenuSelectedTextDifColor).whenTrue(this.enumDropMenu).whenAtMode(this.enumDropMenuPage, EnumDropMenuPage.Selected).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 649 */     this.enumLoopModeArrows = setting("EnumLooperArrows", false).des("Enum Looper Arrows").whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 650 */     this.enumLoopModeArrowsXOffset = setting("EnumLooperArrowsX", 0.0F, -30.0F, 30.0F).des("Enum Looper Arrows X Offset").whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 651 */     this.enumLoopModeArrowsScaleX = setting("ELooperArrowsWidth", 15.0F, 0.0F, 30.0F).des("Enum Looper Arrows Width").whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 652 */     this.enumLoopModeArrowsScaleY = setting("ELooperArrowsHeight", 7.0F, 0.0F, 20.0F).des("Enum Looper Arrows Height").whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 653 */     this.enumArrowClickAnimationMode = setting("ELoopClickAnimate", EnumArrowClickAnimationMode.Scale).des("Enum Looper Arrows Animation").whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 654 */     this.enumArrowClickAnimationFactor = setting("ELooperClickAnimateSpeed", 1.0F, 0.4F, 10.0F).des("Enum Looper Arrows Animation Speed").only(v -> (this.enumArrowClickAnimationMode.getValue() != EnumArrowClickAnimationMode.None)).whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 655 */     this.enumArrowClickAnimationMaxScale = setting("ELCAnimateMaxScale", 1.5F, 0.1F, 5.0F).des("Enum Looper Arrows Animation Max Scale").only(v -> (this.enumArrowClickAnimationMode.getValue() == EnumArrowClickAnimationMode.Scale)).whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 656 */     this.enumArrowClickAnimationMaxAlpha = setting("ELCAnimateMaxAlpha", 200, 0, 255).des("Enum Looper Arrows Animation Max Alpha").only(v -> (this.enumArrowClickAnimationMode.getValue() != EnumArrowClickAnimationMode.None)).whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/* 657 */     this.enumArrowColor = setting("ELooperArrowColor", new Color((new Color(255, 255, 255, 150)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 255, 255, 255, 150)).des("Enum Looper Arrows Color").whenTrue(this.enumLoopModeArrows).whenFalse(this.enumDropMenu).whenAtMode(this.settingsPage, SettingsPage.Enum).whenAtMode(this.page, Page.Settings);
/*     */     
/* 659 */     this.colorNameTextColor = setting("ColorNameRainbow", new Color((new Color(146, 146, 146, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 146, 146, 146, 255)).des("Color Name Text Color").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 660 */     this.colorDisplayShape = setting("ColorDisplayShape", ColorDisplayShape.Square).des("Color Display Shape").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 661 */     this.colorDisplaySize = setting("ColorDisplaySize", 9.9F, 0.0F, 16.0F).des("Color Display Size").only(v -> (this.colorDisplayShape.getValue() != ColorDisplayShape.Rect)).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 662 */     this.colorDisplayRectWidth = setting("CDisplayRectWidth", 30.0F, 0.0F, 50.0F).des("Color Display Rect Shape Width").only(v -> (this.colorDisplayShape.getValue() == ColorDisplayShape.Rect)).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 663 */     this.colorDisplayRectHeight = setting("CDisplayRectHeight", 12.0F, 0.0F, 16.0F).des("Color Display Rect Shape Height").only(v -> (this.colorDisplayShape.getValue() == ColorDisplayShape.Rect)).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 664 */     this.colorDisplayXOffset = setting("CDisplayXOffset", 3.5F, -10.0F, 50.0F).des("Color Display X Offset").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 665 */     this.colorDisplayRounded = setting("ColorDisplayRounded", false).des("Color Display Rounded Corners").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 666 */     this.colorDisplayRoundedRadius = setting("CDisplayRoundedSize", 0.5F, 0.0F, 1.0F).des("Color Display Rounded Corners Size").whenTrue(this.colorDisplayRounded).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 667 */     this.colorDisplayOutline = setting("ColorDisplayOutline", true).des("Color Display Outline").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 668 */     this.colorDisplayOutlineOffset = setting("CDisplayOutlineOffset", 1.3F, 0.0F, 5.0F).des("Color Display Outline Offset").whenTrue(this.colorDisplayOutline).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 669 */     this.colorDisplayOutlineWidth = setting("CDisplayOutlineWidth", 1.0F, 1.0F, 2.0F).des("Color Display Outline Width").whenTrue(this.colorDisplayOutline).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/*     */     
/* 671 */     this.colorDropMenuAnimate = setting("ColorMenuAnimate", true).des("Color DropDown Menu Toggle Animation").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 672 */     this.colorDropMenuAnimateScale = setting("CMenuAnimateScale", true).des("Color DropDown Menu Toggle Scale Animation").whenTrue(this.colorDropMenuAnimate).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 673 */     this.colorDropMenuAnimateSpeed = setting("CMenuAnimateSpeed", 50, 2, 50).des("Color DropDown Menu Toggle Animation Speed").whenTrue(this.colorDropMenuAnimate).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 674 */     this.colorDropMenuXOffset = setting("ColorMenuXOffset", 5, 0, 50).des("Color DropDown Menu X Offset").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 675 */     this.colorDropMenuSideBar = setting("ColorMenuSideBar", true).des("Color DropDown Menu Side Bar").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 676 */     this.colorDropMenuSideBarWidth = setting("CMenuSideBarWidth", 1.7F, 0.0F, 4.0F).des("Color DropDown Menu Side Bar Width").whenTrue(this.colorDropMenuSideBar).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 677 */     this.colorDropMenuSideBarColor = setting("CMenuSideBarColor", new Color((new Color(95, 27, 255, 166)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 95, 27, 255, 166)).des("Color DropDown Menu Side Bar Color").whenTrue(this.colorDropMenuSideBar).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 678 */     this.colorDropMenuOutline = setting("ColorMenuOutline", false).des("Color DropDown Menu Outline").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 679 */     this.colorDropMenuOutlineWidth = setting("CMenuOutlineWidth", 1.0F, 1.0F, 2.0F).des("Color DropDown Menu Outline Width").whenTrue(this.colorDropMenuOutline).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 680 */     this.colorDropMenuOutlineColor = setting("CMenuOutlineColor", new Color((new Color(95, 27, 255, 166)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 95, 27, 255, 166)).des("Color DropDown Menu Outline Color").whenTrue(this.colorDropMenuOutline).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 681 */     this.colorDropMenuExtensions = setting("ColorMenuExtensions", true).des("Color DropDown Menu Top Bottom Extensions").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 682 */     this.colorDropMenuExtensionsHeight = setting("CMenuExtensionsHeight", 6, 0, 12).des("Color DropDown Menu Top Bottom Extensions Height").whenTrue(this.colorDropMenuExtensions).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 683 */     this.colorDropMenuShadow = setting("ColorMenuShadow", true).des("Color DropDown Menu Gradient Shadows").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 684 */     this.colorDropMenuShadowSize = setting("CMenuShadowSize", 0.2F, 0.0F, 1.0F).des("Color DropDown Menu Gradient Shadow Size").whenTrue(this.colorDropMenuShadow).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 685 */     this.colorDropMenuShadowAlpha = setting("CMenuShadowAlpha", 100, 0, 255).des("Color DropDown Menu Gradient Shadow Alpha").whenTrue(this.colorDropMenuShadow).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 686 */     this.colorDropMenuTopBottomGradients = setting("CMenuTopBottomGradients", true).des("Color DropDown Menu Top Bottom Gradients").whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 687 */     this.colorDropMenuTopBottomGradientsHeight = setting("CMenuTopBottomGHeight", 40.0F, 0.0F, 50.0F).des("Color DropDown Menu Top Bottom Gradients Height").whenTrue(this.colorDropMenuTopBottomGradients).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 688 */     this.colorDropMenuTopBottomGradientsColor = setting("CMenuTopBottomGColor", new Color((new Color(0, 0, 0, 185)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 0, 0, 0, 100)).des("Color DropDown Menu Top Bottom Gradients Color").whenTrue(this.colorDropMenuTopBottomGradients).whenAtMode(this.settingsPage, SettingsPage.Color).whenAtMode(this.page, Page.Settings);
/* 689 */     this.stringInputNameOffset = setting("StringInputNameOffsetY", 2.5F, 0.0F, 8.0F).des("Y offset of string input setting name").whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 690 */     this.stringInputBoxOutline = setting("StringInputOutline", false).des("Draw an outline on the string input text box").whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 691 */     this.stringInputBoxOutlineWidth = setting("StringInputOutlineWidth", 1.0F, 1.0F, 3.0F).des("Width of outline on string input text box").whenTrue(this.stringInputBoxOutline).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 692 */     this.stringInputBoxOutlineColor = setting("StringInputOutlineColor", new Color((new Color(225, 225, 225, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 225, 225, 225, 255)).whenTrue(this.stringInputBoxOutline).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 693 */     this.stringInputBoxColor = setting("StringInputBoxColor", new Color((new Color(20, 20, 20, 120)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 20, 20, 20, 120)).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 694 */     this.stringInputNameColor = setting("StringInputNameColor", new Color((new Color(190, 190, 190, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 190, 190, 190, 255)).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 695 */     this.stringInputValueColor = setting("StringInputValueColor", new Color((new Color(120, 120, 120, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 120, 120, 120, 255)).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 696 */     this.stringInputTypingMarkColor = setting("StringInputTypingMarkColor", new Color((new Color(170, 170, 170, 255)).getRGB(), false, false, 1.0F, 0.75F, 0.9F, 170, 170, 170, 255)).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/* 697 */     this.stringInputValueScale = setting("StringInputValueScale", 0.8F, 0.1F, 1.0F).whenAtMode(this.settingsPage, SettingsPage.StringInput).whenAtMode(this.page, Page.Settings);
/*     */     instance = this;
/*     */   } public Setting<Float> panelBaseShadowRadius; public Setting<Boolean> baseGlow; public Setting<Float> baseGlowWidth; public Setting<Float> baseGlowHeight; public Setting<Color> baseGlowColor; public Setting<Float> heightBase; public Setting<Float> widthBase; public Setting<Integer> baseAlpha; public Setting<Boolean> baseOutline; public Setting<Boolean> baseOutlineTopToggle; public Setting<Float> baseOutlineWidth; public Setting<Color> baseOutlineColor; public Setting<BaseRectPattern> baseRectPattern; public Setting<BaseRectPatternExtra> baseRectPatternExtra; public Setting<BaseRectPatternTrianglesSingleExtra> baseRectPatternSingleTrianglesExtra; public Setting<Float> baseRectPatternYOffset; public Setting<Float> baseRectPatternSize; public Setting<Float> baseRectPatternGap; public Setting<Float> baseRectPatternDoubleYGap; public Setting<Integer> baseRectPatternAmount; public Setting<Boolean> baseRectPatternReflect; public Setting<Boolean> baseRectPatternShadow; public Setting<Float> baseRectPatternShadowRadius; public Setting<Float> baseRectPatternShadowY; public Setting<Integer> baseRectPatternShadowAlpha; public Setting<Float> baseRectPatternShadowWidth; public Setting<Float> baseRectPatternShadowHeight; public Setting<Boolean> baseRectPatternOutline; public Setting<Float> baseRectPatternOutlineWidth; public Setting<Boolean> baseRectPatternOutlineBrightnessRoll; public Setting<BaseRectPatternOutlineBrightnessRollDirection> baseRectPatternOutlineBrightnessRollDirection; public Setting<Float> baseRectPatternOutlineBrightnessRollSpeed; public Setting<Float> baseRectPatternOutlineBrightnessRollMaxBright; public Setting<Float> baseRectPatternOutlineBrightnessRollMinBright; public Setting<Float> baseRectPatternOutlineBrightnessRollLength; public Setting<Color> baseRectPatternOutlineColor; public Setting<Boolean> baseRectPatternBrightnessRoll; public Setting<BaseRectPatternBrightnessRollDirection> baseRectPatternBrightnessRollDirection; public Setting<Float> baseRectPatternBrightnessRollSpeed; public Setting<Float> baseRectPatternBrightnessRollMaxBright; public Setting<Float> baseRectPatternBrightnessRollMinBright; public Setting<Float> baseRectPatternBrightnessRollLength; public Setting<Color> baseRectPatternColor; public Setting<Boolean> guiCategoryBaseRound; public Setting<Float> radiusBase; public Setting<Boolean> arcTopRightBase; public Setting<Boolean> arcTopLeftBase; public Setting<Boolean> arcDownRightBase; public Setting<Boolean> arcDownLeftBase; public Setting<Boolean> guiCategoryPanelFadeDownExtend; public Setting<Boolean> panelFadeDownExtendOutline; public Setting<Float> panelFadeDownExtendHeight; public Setting<Boolean> outline; public Setting<Boolean> outlineDownToggle; public Setting<Float> outlineWidth; public Setting<Boolean> outlineColorGradient; public Setting<Color> outlineColor; public Setting<Color> outlineTopColor; public Setting<Color> outlineDownColor; public Setting<Boolean> backgroundColor; public Setting<Boolean> gradient; public Setting<Color> trColor; public Setting<Color> tlColor; public Setting<Color> brColor; public Setting<Color> blColor; public Setting<Color> bgColor; Setting<SettingsPage> settingsPage; public Setting<Boolean> booleanFullRect; public Setting<Boolean> booleanFullRectSmooth; public Setting<Float> booleanFullRectSmoothFactor; public Setting<Boolean> booleanFullRectSmoothAlpha; public Setting<BooleanFullRectScaleType> booleanFullRectScaleType; public Setting<Color> booleanFullRectColor; public Setting<BooleanSwitchTypes> booleanSwitchType; public Setting<Float> booleanSwitchLineWidth; public Setting<Float> booleanSwitchX; public Setting<Float> booleanSwitchScale; public Setting<Float> booleanDotFillAmount; public Setting<Boolean> booleanSmooth; public Setting<Float> booleanSmoothFactor; public Setting<BooleanDotMode> booleanDotMode; public Setting<Boolean> booleanSwitchColorChange; public Setting<Color> booleanDisabledColor; public Setting<Color> booleanEnabledColor; public Setting<Color> booleanColor; public Setting<Boolean> booleanTextColorChange; public Setting<Boolean> booleanTextColorSmooth; public Setting<Float> booleanTextColorSmoothFactor; public Setting<Color> booleanTextColorEnabledColor; public Setting<Color> booleanTextColorDisabledColor; public Setting<Boolean> numSliderThinMode; public Setting<Float> numSliderThinModeTextOffset; public Setting<Float> numSliderThinModeBarThickness; public Setting<Boolean> numSliderThinModeRounded; public Setting<Float> numSliderThinModeRoundedRadius; public Setting<Boolean> numSliderThinModeSliderButton; public Setting<Boolean> numSliderThinModeSliderButtonRounded; public Setting<Float> numSliderThinModeSliderButtonRoundedRadius; public Setting<Float> numSliderThinModeSliderButtonWidth; public Setting<Float> numSliderThinModeSliderButtonHeight; public Setting<Boolean> numSliderThinModeSliderButtonShadow; public Setting<Float> numSliderThinModeSliderButtonShadowSize; public Setting<Integer> numSliderThinModeSliderButtonShadowAlpha; public Setting<Boolean> numSliderThinModeSliderButtonShadowAlphaFadeOut; public Setting<Float> numSliderThinModeSliderButtonShadowAlphaFadeOutThreshold; public Setting<Color> numSliderThinModeSliderButtonColor; public Setting<Color> numSliderThinModeUnSlidedColor; public Setting<Color> numSliderTextColor; public Setting<Color> numSliderDisplayValueTextColor; public Setting<Boolean> numSliderGradient; public Setting<Boolean> numSliderValueLock; public Setting<Color> numSliderLeftColor; public Setting<Color> numSliderRightColor; public Setting<Color> numSliderColor; public Setting<Boolean> bindButtonFancy; public Setting<Boolean> bindButtonFancyRounded; public Setting<Float> bindButtonFancyRoundedRadius; public Setting<Boolean> bindButtonFancyOutline; public Setting<Float> bindButtonFancyOutlineOffset; public Setting<Float> bindButtonFancyOutlineWidth; public Setting<Boolean> bindButtonFancyWaitingDots; public Setting<Float> bindButtonFancyWaitingDotsRadius; public Setting<Float> bindButtonFancyWaitingDotsGap; public Setting<Color> bindButtonFancyWaitingDotsColor; public Setting<Boolean> bindButtonFancyWaitingRect; public Setting<Color> bindButtonFancyWaitingRectColor; public Setting<Boolean> bindButtonFancyWaitingAnimate; public Setting<Float> bindButtonFancyWaitingAnimateFactor; public Setting<Boolean> bindButtonFancyWaitingDotsRollingBrightnessAnimate; public Setting<BindButtonWaitingDotsRolledBrightnessDirection> bindButtonFancyWaitingDotsRollingBrightnessRollDirection; public Setting<Float> bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateFactor; public Setting<Float> bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateMaxBright; public Setting<Float> bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateMinBright; public Setting<Float> bindButtonFancyWaitingAnimateDotsRollingBrightnessAnimateRollLength; public Setting<BindButtonColoredRectAnimateMode> bindButtonColoredRectAnimateMode; public Setting<Color> bindButtonKeyColor; public Setting<KeyBindFancyFont> bindButtonKeyStrFont; public Setting<Float> bindButtonKeyStrX; public Setting<Float> bindButtonKeyStrY; public Setting<Float> bindButtonKeyStrScale; public Setting<Color> bindButtonKeyStringColor; public Setting<Color> bindButtonTextColor; public Setting<VisibilitySettingMode> visibilitySettingMode; public Setting<Color> visibilityVisibleTextColor; public Setting<Color> visibilityTextColor; public Setting<Boolean> visibilityBooleanFullRect; public Setting<Boolean> visibilityBooleanFullRectSmooth; public Setting<Float> visibilityBooleanFullRectSmoothFactor; public Setting<Boolean> visibilityBooleanFullRectSmoothAlpha; public Setting<BooleanFullRectScaleType> visibilityBooleanFullRectScaleType; public Setting<Color> visibilityBooleanFullRectColor; public Setting<BooleanSwitchTypes> visibilityBooleanSwitchType; public Setting<Float> visibilityBooleanSwitchLineWidth; public Setting<Float> visibilityBooleanSwitchX; public Setting<Float> visibilityBooleanSwitchScale; public Setting<Float> visibilityBooleanDotFillAmount; public Setting<Boolean> visibilityBooleanSmooth; public Setting<Float> visibilityBooleanSmoothFactor; public Setting<BooleanDotMode> visibilityBooleanDotMode; public Setting<Boolean> visibilityBooleanSwitchColorChange; public Setting<Color> visibilityBooleanDisabledColor; public Setting<Color> visibilityBooleanEnabledColor; public Setting<Color> visibilityBooleanColor; public Setting<Integer> visibilityIconYOffset; public Setting<Float> visibilityIconScale; public Setting<Color> visibilityIconColor; public Setting<Boolean> visibilityIconGlow; public Setting<Boolean> visibilityIconGlowToggle; public Setting<Float> visibilityIconGlowX; public Setting<Float> visibilityIconGlowY; public Setting<Float> visibilityIconGlowSize; public Setting<Color> visibilityIconGlowColor; public Setting<Boolean> enumDropMenu; public Setting<Color> enumNameColor; public Setting<Integer> enumLoopModeTextXOffset; public Setting<Color> enumDisplayTextColor; public Setting<EnumDropMenuPage> enumDropMenuPage; public Setting<Boolean> enumDropMenuIcon; public Setting<Integer> enumDropMenuIconXOffset; public Setting<Float> enumDropMenuIconScale; public Setting<Color> enumDropMenuIconColor; public Setting<Boolean> enumDropMenuIconExpandedChange; public Setting<Boolean> enumDropMenuIconExpandedChangeAnimation; public Setting<Float> enumDropMenuIconExpandedChangeAnimationSpeed; public Setting<Boolean> enumDropMenuIconExpandedGlow; public Setting<Float> enumDropMenuIconExpandedGlowSize; public Setting<Integer> enumDropMenuIconExpandedGlowAlpha; public Setting<Color> enumDropMenuIconExpandedChangedColor; public Setting<Boolean> enumDropMenuExpandAnimate; public Setting<Boolean> enumDropMenuExpandAnimateScale; public Setting<Float> enumDropMenuExpandAnimateScaleSpeed; public Setting<Float> enumDropMenuExpandAnimateSpeed; public Setting<Integer> enumDropMenuXOffset; public Setting<Integer> enumDropMenuWidthFactor; public Setting<Float> enumDropMenuTextScale; public Setting<Color> enumDropMenuTextColor; public Setting<Boolean> enumDropMenuSideBar; public Setting<Float> enumDropMenuSideBarWidth; public Setting<Boolean> enumDropMenuOutline; public Setting<Float> enumDropMenuOutlineWidth; public Setting<Color> enumDropMenuOutlineColor; public Setting<Boolean> enumDropMenuExtensions; public Setting<Float> enumDropMenuExtensionsHeight; public Setting<Integer> enumDropMenuRectGap; public Setting<Color> enumDropMenuRectColor; public Setting<Color> enumDropMenuRectBGColor; public Setting<Boolean> enumDropMenuSideGlow; public Setting<Float> enumDropMenuSideGlowWidth; public Setting<Color> enumDropMenuSideGlowColor; public Setting<Boolean> enumDropMenuTopBottomGradients; public Setting<Float> enumDropMenuTopBottomGradientsHeight; public Setting<Color> enumDropMenuTopBottomGradientsColor; public Setting<EnumDropMenuOtherSideGlowMode> enumDropMenuOtherSideGlow; public Setting<Float> enumDropMenuOtherSideGlowWidth; public Setting<Color> enumDropMenuOtherSideGlowColor; public Setting<Boolean> enumDropMenuShadow; public Setting<Float> enumDropMenuShadowSize; public Setting<Integer> enumDropMenuShadowAlpha; public Setting<Boolean> enumDropMenuSelectedRectScaleOut; public Setting<Float> enumDropMenuSelectedRectScaleOutFactor; public Setting<Float> enumDropMenuSelectedRectScaleMaxScale; public Setting<Color> enumDropMenuSelectedRectScaleOutColor; public Setting<Boolean> enumDropMenuSelectedRect; public Setting<Boolean> enumDropMenuSelectedRectRounded; public Setting<Float> enumDropMenuSelectedRectRoundedRadius; public Setting<EnumDropMenuSelectedRectAnimation> enumDropMenuSelectedRectAnimation; public Setting<Float> enumDropMenuSelectedRectAnimationSpeed; public Setting<Color> enumDropMenuSelectedRectColor; public Setting<Boolean> enumDropMenuSelectedSideRect; public Setting<Boolean> enumDropMenuSelectedSideRectRounded; public Setting<Float> enumDropMenuSelectedSideRectRoundedRadius; public Setting<EnumDropMenuSelectedSideRectSide> enumDropMenuSelectedSideRectSide; public Setting<Boolean> enumDropMenuSelectSideRectFull; public Setting<Float> enumDropMenuSelectedSideRectXOffset; public Setting<Float> enumDropMenuSelectedSideRectWidth; public Setting<Float> enumDropMenuSelectedSideRectHeight; public Setting<Boolean> enumDropMenuSelectedSideRectAnimation; public Setting<Float> enumDropMenuSelectedSideRectAnimationSpeed; public Setting<Color> enumDropMenuSelectedSideRectColor; public Setting<Boolean> enumDropMenuSelectedSideGlow; public Setting<EnumDropMenuSelectedSideGlowSide> enumDropMenuSelectedSideGlowSide; public Setting<Float> enumDropMenuSelectedSideGlowWidth; public Setting<Boolean> enumDropMenuSelectedSideGlowAnimate; public Setting<Float> enumDropMenuSelectedSideGlowAnimateSpeed; public Setting<Color> enumDropMenuSelectedSideGlowColor; public Setting<Boolean> enumDropMenuSelectedTextDifColor; public Setting<Boolean> enumDropMenuSelectedTextColorAnimation; public Setting<Float> enumDropMenuSelectedTextColorAnimationSpeed; public Setting<Color> enumDropMenuSelectedTextColor; public Setting<Boolean> enumLoopModeArrows; public Setting<Float> enumLoopModeArrowsXOffset; public Setting<Float> enumLoopModeArrowsScaleX; public Setting<Float> enumLoopModeArrowsScaleY; public Setting<EnumArrowClickAnimationMode> enumArrowClickAnimationMode; public Setting<Float> enumArrowClickAnimationFactor; public Setting<Float> enumArrowClickAnimationMaxScale; public Setting<Integer> enumArrowClickAnimationMaxAlpha; public Setting<Color> enumArrowColor; public Setting<Color> colorNameTextColor; public Setting<ColorDisplayShape> colorDisplayShape; public Setting<Float> colorDisplaySize; public Setting<Float> colorDisplayRectWidth; public Setting<Float> colorDisplayRectHeight; public Setting<Float> colorDisplayXOffset; public Setting<Boolean> colorDisplayRounded; public Setting<Float> colorDisplayRoundedRadius; public Setting<Boolean> colorDisplayOutline; public Setting<Float> colorDisplayOutlineOffset; public Setting<Float> colorDisplayOutlineWidth; public Setting<Boolean> colorDropMenuAnimate; public Setting<Boolean> colorDropMenuAnimateScale; public Setting<Integer> colorDropMenuAnimateSpeed; public Setting<Integer> colorDropMenuXOffset; public Setting<Boolean> colorDropMenuSideBar; public Setting<Float> colorDropMenuSideBarWidth; public Setting<Color> colorDropMenuSideBarColor; public Setting<Boolean> colorDropMenuOutline; public Setting<Float> colorDropMenuOutlineWidth; public Setting<Color> colorDropMenuOutlineColor; public Setting<Boolean> colorDropMenuExtensions; public Setting<Integer> colorDropMenuExtensionsHeight; public Setting<Boolean> colorDropMenuShadow; public Setting<Float> colorDropMenuShadowSize; public Setting<Integer> colorDropMenuShadowAlpha; public Setting<Boolean> colorDropMenuTopBottomGradients; public Setting<Float> colorDropMenuTopBottomGradientsHeight; public Setting<Color> colorDropMenuTopBottomGradientsColor; public Setting<Float> stringInputNameOffset; public Setting<Boolean> stringInputBoxOutline; public Setting<Float> stringInputBoxOutlineWidth; public Setting<Color> stringInputBoxOutlineColor; public Setting<Color> stringInputBoxColor; public Setting<Color> stringInputNameColor; public Setting<Color> stringInputValueColor; public Setting<Color> stringInputTypingMarkColor; public Setting<Float> stringInputValueScale;
/* 700 */   enum Page { General, CategoryBars, BorderBars, Shadow, Panel, SideIcon, Extended, Enabled, Outline, Background, Settings; }
/*     */ 
/*     */   
/*     */   enum SettingsPage {
/* 704 */     Boolean, Slider, Enum, Visibility, Color, Bind, StringInput;
/*     */   }
/*     */   
/*     */   public enum EnabledSideSide {
/* 708 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum SideIconMode {
/* 712 */     Dots, Plus, Arrow, Future, None;
/*     */   }
/*     */   
/*     */   public enum EnabledRectMoveMode {
/* 716 */     Left, Right, All;
/*     */   }
/*     */   
/*     */   public enum ModuleSideGlow {
/* 720 */     Left, Right, Both, None;
/*     */   }
/*     */   
/*     */   public enum ModuleSeparatorFadeMode {
/* 724 */     Left, Right, Both, None;
/*     */   }
/*     */   
/*     */   public enum EnableDisableScaleRect {
/* 728 */     Enable, Disable, Both, None;
/*     */   }
/*     */   
/*     */   public enum HoverScaleFadeMode {
/* 732 */     Left, Right, Both, All, None;
/*     */   }
/*     */   
/*     */   public enum SideIconSide {
/* 736 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum ModuleMiniIconSide {
/* 740 */     Left, Right, HardRight, HardLeft;
/*     */   }
/*     */   
/*     */   public enum ModuleSideGlowDouble {
/* 744 */     Left, Right, None;
/*     */   }
/*     */   
/*     */   public enum PanelExtensions {
/* 748 */     Top, Bottom, Both, None;
/*     */   }
/*     */   
/*     */   public enum BaseRectPattern {
/* 752 */     Triangles, Circles, Diamonds, None;
/*     */   }
/*     */   
/*     */   public enum BaseRectPatternExtra {
/* 756 */     Double, Single;
/*     */   }
/*     */   
/*     */   public enum BaseRectPatternTrianglesSingleExtra {
/* 760 */     Down, Up, Left, Right;
/*     */   }
/*     */   
/*     */   public enum BaseRectPatternOutlineBrightnessRollDirection {
/* 764 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum BaseRectPatternBrightnessRollDirection {
/* 768 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum CategoryIconsSides {
/* 772 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum EnabledTextBrightRollAxis {
/* 776 */     X, Y;
/*     */   }
/*     */   
/*     */   public enum EnabledTextBrightRollDirectionX {
/* 780 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum EnabledTextBrightRollDirectionY {
/* 784 */     Up, Down;
/*     */   }
/*     */   
/*     */   public enum CategoryRectHoverParticlesMode {
/* 788 */     Circles, Diamonds, Triangles, None;
/*     */   }
/*     */   
/*     */   public enum CategoryRectHoverParticlesScaleFadeMode {
/* 792 */     Alpha, Scale, Both;
/*     */   }
/*     */   
/*     */   public enum EnabledRectAnimation {
/* 796 */     Alpha, Scale, Both, None;
/*     */   }
/*     */   
/*     */   public enum EnabledRectBrightRollAxis {
/* 800 */     X, Y;
/*     */   }
/*     */   
/*     */   public enum EnabledRectBrightRollDirectionX {
/* 804 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum EnabledRectBrightRollDirectionY {
/* 808 */     Up, Down;
/*     */   }
/*     */   
/*     */   public enum BooleanDotMode {
/* 812 */     Alpha, Scale, Both;
/*     */   }
/*     */   
/*     */   public enum BooleanSwitchTypes {
/* 816 */     SliderRound, SliderNonRound, Circle, Square, None;
/*     */   }
/*     */   
/*     */   public enum BooleanFullRectScaleType {
/* 820 */     Left, Right, All, None;
/*     */   }
/*     */   
/*     */   public enum BindButtonColoredRectAnimateMode {
/* 824 */     Scale, Alpha, Both, None;
/*     */   }
/*     */   
/*     */   public enum KeyBindFancyFont {
/* 828 */     Comfortaa, Arial, Objectivity, Minecraft;
/*     */   }
/*     */   
/*     */   public enum BindButtonWaitingDotsRolledBrightnessDirection {
/* 832 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum VisibilitySettingMode {
/* 836 */     Text, Symbol, Boolean;
/*     */   }
/*     */   
/*     */   public enum EnumArrowClickAnimationMode {
/* 840 */     Scale, Alpha, None;
/*     */   }
/*     */   
/*     */   public enum EnumDropMenuOtherSideGlowMode {
/* 844 */     Right, Left, Both, None;
/*     */   }
/*     */   
/*     */   public enum EnumDropMenuPage {
/* 848 */     Icon, Selected, Base;
/*     */   }
/*     */   
/*     */   public enum EnumDropMenuSelectedRectAnimation {
/* 852 */     Alpha, Scale, AlpScale, Slide, None;
/*     */   }
/*     */   
/*     */   public enum EnumDropMenuSelectedSideRectSide {
/* 856 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum EnumDropMenuSelectedSideGlowSide {
/* 860 */     Left, Right;
/*     */   }
/*     */   
/*     */   public enum ColorDisplayShape {
/* 864 */     Square, Rect, Diamond;
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public void onEnable() {
/* 870 */     if (mc.field_71439_g != null && 
/* 871 */       !(mc.field_71462_r instanceof ClickGUIFinal)) {
/* 872 */       mc.func_147108_a((GuiScreen)new ClickGUIFinal());
/* 873 */       if (((Boolean)instance.guiMove.getValue()).booleanValue()) {
/* 874 */         this.flag = 1;
/*     */       }
/*     */       
/* 877 */       this.moduleEnableFlag = true;
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public void onTick() {
/* 884 */     if (HUDEditor.instance.isEnabled()) {
/* 885 */       ModuleManager.getModule(HUDEditor.class).disable();
/*     */     }
/*     */   }
/*     */ 
/*     */   
/*     */   public void onDisable() {
/* 891 */     this.moduleDisableFlag = true;
/*     */     
/* 893 */     ClickGUIFinal.previousIndex = 0;
/* 894 */     ClickGUIFinal.previousText = "";
/* 895 */     Panel.categoryRectHoverParticlesList.clear();
/* 896 */     Panel.categoryRectHoverParticlesOriginalYs.clear();
/* 897 */     Panel.categoryRectHoverParticlesSpeed.clear();
/* 898 */     Panel.categoryRectHoverParticlesTriAngle.clear();
/* 899 */     Panel.categoryRectHoverParticlesTriSpinSpeed.clear();
/* 900 */     Panel.categoryRectHoverParticlesSize.clear();
/*     */     
/* 902 */     if (!((Boolean)instance.guiMove.getValue()).booleanValue()) {
/* 903 */       if (Particles.INSTANCE.isEnabled()) {
/* 904 */         ParticleUtil.clearParticles();
/*     */       }
/* 906 */       if (mc.field_71462_r instanceof ClickGUIFinal) {
/* 907 */         mc.func_147108_a(null);
/*     */       }
/*     */     } 
/* 910 */     ConfigManager.saveAll();
/*     */   } }


/* Location:              C:\Users\XE\Desktop\moloch.su-b3.jar!\net\spartanb312\base\module\modules\client\ClickGUI.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */